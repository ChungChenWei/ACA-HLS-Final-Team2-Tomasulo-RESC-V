-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cpu_write_from_CDB is
port (
    ap_ready : OUT STD_LOGIC;
    sym : IN STD_LOGIC_VECTOR (31 downto 0);
    value_r : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_adders_status_busy_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_adders_status_busy_0_ap_vld : OUT STD_LOGIC;
    rs_multipliers_status_busy_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_multipliers_status_busy_0_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_0_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_0_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_0_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_0_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_1_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_1_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_1_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_1_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_2_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_2_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_2_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_2_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_3_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_3_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_3_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_3_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_4_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_4_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_4_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_4_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r1_stat_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r1_stat_5_o_ap_vld : OUT STD_LOGIC;
    rs_entry_3_1_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_3_1_5_o_ap_vld : OUT STD_LOGIC;
    rs_entry_r2_stat_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_r2_stat_5_o_ap_vld : OUT STD_LOGIC;
    rs_entry_4_1_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rs_entry_4_1_5_o_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_0_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_1_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_2_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_3_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_4_ap_vld : OUT STD_LOGIC;
    rs_entry_valid_5 : OUT STD_LOGIC_VECTOR (0 downto 0);
    rs_entry_valid_5_ap_vld : OUT STD_LOGIC );
end;


architecture behav of cpu_write_from_CDB is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

attribute shreg_extract : string;
    signal and_ln115_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_1_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_2_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_2_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_3_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_3_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_4_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_4_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln115_5_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_5_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln105_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln111_fu_166_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_110_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln105_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_1_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_1_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_2_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_3_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_2_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_3_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_4_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_5_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_4_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_5_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_6_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_7_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_6_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_7_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_8_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_9_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_8_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_9_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_10_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln115_11_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_10_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_11_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    and_ln105_fu_130_p2 <= (xor_ln105_fu_118_p2 and icmp_ln105_fu_124_p2);
    and_ln108_fu_154_p2 <= (icmp_ln108_fu_142_p2 and icmp_ln108_1_fu_148_p2);
    and_ln115_1_fu_302_p2 <= (icmp_ln115_3_fu_296_p2 and icmp_ln115_2_fu_286_p2);
    and_ln115_2_fu_378_p2 <= (icmp_ln115_5_fu_372_p2 and icmp_ln115_4_fu_362_p2);
    and_ln115_3_fu_454_p2 <= (icmp_ln115_7_fu_448_p2 and icmp_ln115_6_fu_438_p2);
    and_ln115_4_fu_530_p2 <= (icmp_ln115_9_fu_524_p2 and icmp_ln115_8_fu_514_p2);
    and_ln115_5_fu_606_p2 <= (icmp_ln115_11_fu_600_p2 and icmp_ln115_10_fu_590_p2);
    and_ln115_fu_226_p2 <= (icmp_ln115_fu_210_p2 and icmp_ln115_1_fu_220_p2);
    and_ln119_1_fu_340_p2 <= (icmp_ln119_3_fu_334_p2 and icmp_ln119_2_fu_324_p2);
    and_ln119_2_fu_416_p2 <= (icmp_ln119_5_fu_410_p2 and icmp_ln119_4_fu_400_p2);
    and_ln119_3_fu_492_p2 <= (icmp_ln119_7_fu_486_p2 and icmp_ln119_6_fu_476_p2);
    and_ln119_4_fu_568_p2 <= (icmp_ln119_9_fu_562_p2 and icmp_ln119_8_fu_552_p2);
    and_ln119_5_fu_644_p2 <= (icmp_ln119_11_fu_638_p2 and icmp_ln119_10_fu_628_p2);
    and_ln119_fu_264_p2 <= (icmp_ln119_fu_248_p2 and icmp_ln119_1_fu_258_p2);
    ap_ready <= ap_const_logic_1;
    icmp_ln105_fu_124_p2 <= "1" when (signed(sym) < signed(ap_const_lv32_3)) else "0";
    icmp_ln108_1_fu_148_p2 <= "1" when (signed(sym) < signed(ap_const_lv32_6)) else "0";
    icmp_ln108_fu_142_p2 <= "1" when (signed(sym) > signed(ap_const_lv32_2)) else "0";
    icmp_ln115_10_fu_590_p2 <= "1" when (rs_entry_r1_stat_5_i = ap_const_lv32_0) else "0";
    icmp_ln115_11_fu_600_p2 <= "1" when (rs_entry_3_1_5_i = sym) else "0";
    icmp_ln115_1_fu_220_p2 <= "1" when (rs_entry_3_1_0_i = sym) else "0";
    icmp_ln115_2_fu_286_p2 <= "1" when (rs_entry_r1_stat_1_i = ap_const_lv32_0) else "0";
    icmp_ln115_3_fu_296_p2 <= "1" when (rs_entry_3_1_1_i = sym) else "0";
    icmp_ln115_4_fu_362_p2 <= "1" when (rs_entry_r1_stat_2_i = ap_const_lv32_0) else "0";
    icmp_ln115_5_fu_372_p2 <= "1" when (rs_entry_3_1_2_i = sym) else "0";
    icmp_ln115_6_fu_438_p2 <= "1" when (rs_entry_r1_stat_3_i = ap_const_lv32_0) else "0";
    icmp_ln115_7_fu_448_p2 <= "1" when (rs_entry_3_1_3_i = sym) else "0";
    icmp_ln115_8_fu_514_p2 <= "1" when (rs_entry_r1_stat_4_i = ap_const_lv32_0) else "0";
    icmp_ln115_9_fu_524_p2 <= "1" when (rs_entry_3_1_4_i = sym) else "0";
    icmp_ln115_fu_210_p2 <= "1" when (rs_entry_r1_stat_0_i = ap_const_lv32_0) else "0";
    icmp_ln119_10_fu_628_p2 <= "1" when (rs_entry_r2_stat_5_i = ap_const_lv32_0) else "0";
    icmp_ln119_11_fu_638_p2 <= "1" when (rs_entry_4_1_5_i = sym) else "0";
    icmp_ln119_1_fu_258_p2 <= "1" when (rs_entry_4_1_0_i = sym) else "0";
    icmp_ln119_2_fu_324_p2 <= "1" when (rs_entry_r2_stat_1_i = ap_const_lv32_0) else "0";
    icmp_ln119_3_fu_334_p2 <= "1" when (rs_entry_4_1_1_i = sym) else "0";
    icmp_ln119_4_fu_400_p2 <= "1" when (rs_entry_r2_stat_2_i = ap_const_lv32_0) else "0";
    icmp_ln119_5_fu_410_p2 <= "1" when (rs_entry_4_1_2_i = sym) else "0";
    icmp_ln119_6_fu_476_p2 <= "1" when (rs_entry_r2_stat_3_i = ap_const_lv32_0) else "0";
    icmp_ln119_7_fu_486_p2 <= "1" when (rs_entry_4_1_3_i = sym) else "0";
    icmp_ln119_8_fu_552_p2 <= "1" when (rs_entry_r2_stat_4_i = ap_const_lv32_0) else "0";
    icmp_ln119_9_fu_562_p2 <= "1" when (rs_entry_4_1_4_i = sym) else "0";
    icmp_ln119_fu_248_p2 <= "1" when (rs_entry_r2_stat_0_i = ap_const_lv32_0) else "0";
    rs_adders_status_busy_0 <= ap_const_lv1_0;

    rs_adders_status_busy_0_ap_vld_assign_proc : process(and_ln105_fu_130_p2)
    begin
        if ((ap_const_lv1_1 = and_ln105_fu_130_p2)) then 
            rs_adders_status_busy_0_ap_vld <= ap_const_logic_1;
        else 
            rs_adders_status_busy_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_0_o_assign_proc : process(value_r, rs_entry_3_1_0_i, and_ln115_fu_226_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_fu_226_p2)) then 
            rs_entry_3_1_0_o <= value_r;
        else 
            rs_entry_3_1_0_o <= rs_entry_3_1_0_i;
        end if; 
    end process;


    rs_entry_3_1_0_o_ap_vld_assign_proc : process(and_ln115_fu_226_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_fu_226_p2)) then 
            rs_entry_3_1_0_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_1_o_assign_proc : process(value_r, rs_entry_3_1_1_i, and_ln115_1_fu_302_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_1_fu_302_p2)) then 
            rs_entry_3_1_1_o <= value_r;
        else 
            rs_entry_3_1_1_o <= rs_entry_3_1_1_i;
        end if; 
    end process;


    rs_entry_3_1_1_o_ap_vld_assign_proc : process(and_ln115_1_fu_302_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_1_fu_302_p2)) then 
            rs_entry_3_1_1_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_2_o_assign_proc : process(value_r, rs_entry_3_1_2_i, and_ln115_2_fu_378_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_2_fu_378_p2)) then 
            rs_entry_3_1_2_o <= value_r;
        else 
            rs_entry_3_1_2_o <= rs_entry_3_1_2_i;
        end if; 
    end process;


    rs_entry_3_1_2_o_ap_vld_assign_proc : process(and_ln115_2_fu_378_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_2_fu_378_p2)) then 
            rs_entry_3_1_2_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_3_o_assign_proc : process(value_r, rs_entry_3_1_3_i, and_ln115_3_fu_454_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_3_fu_454_p2)) then 
            rs_entry_3_1_3_o <= value_r;
        else 
            rs_entry_3_1_3_o <= rs_entry_3_1_3_i;
        end if; 
    end process;


    rs_entry_3_1_3_o_ap_vld_assign_proc : process(and_ln115_3_fu_454_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_3_fu_454_p2)) then 
            rs_entry_3_1_3_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_4_o_assign_proc : process(value_r, rs_entry_3_1_4_i, and_ln115_4_fu_530_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_4_fu_530_p2)) then 
            rs_entry_3_1_4_o <= value_r;
        else 
            rs_entry_3_1_4_o <= rs_entry_3_1_4_i;
        end if; 
    end process;


    rs_entry_3_1_4_o_ap_vld_assign_proc : process(and_ln115_4_fu_530_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_4_fu_530_p2)) then 
            rs_entry_3_1_4_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_3_1_5_o_assign_proc : process(value_r, rs_entry_3_1_5_i, and_ln115_5_fu_606_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_5_fu_606_p2)) then 
            rs_entry_3_1_5_o <= value_r;
        else 
            rs_entry_3_1_5_o <= rs_entry_3_1_5_i;
        end if; 
    end process;


    rs_entry_3_1_5_o_ap_vld_assign_proc : process(and_ln115_5_fu_606_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_5_fu_606_p2)) then 
            rs_entry_3_1_5_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_3_1_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_0_o_assign_proc : process(value_r, rs_entry_4_1_0_i, and_ln119_fu_264_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_fu_264_p2)) then 
            rs_entry_4_1_0_o <= value_r;
        else 
            rs_entry_4_1_0_o <= rs_entry_4_1_0_i;
        end if; 
    end process;


    rs_entry_4_1_0_o_ap_vld_assign_proc : process(and_ln119_fu_264_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_fu_264_p2)) then 
            rs_entry_4_1_0_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_1_o_assign_proc : process(value_r, rs_entry_4_1_1_i, and_ln119_1_fu_340_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_1_fu_340_p2)) then 
            rs_entry_4_1_1_o <= value_r;
        else 
            rs_entry_4_1_1_o <= rs_entry_4_1_1_i;
        end if; 
    end process;


    rs_entry_4_1_1_o_ap_vld_assign_proc : process(and_ln119_1_fu_340_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_1_fu_340_p2)) then 
            rs_entry_4_1_1_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_2_o_assign_proc : process(value_r, rs_entry_4_1_2_i, and_ln119_2_fu_416_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_2_fu_416_p2)) then 
            rs_entry_4_1_2_o <= value_r;
        else 
            rs_entry_4_1_2_o <= rs_entry_4_1_2_i;
        end if; 
    end process;


    rs_entry_4_1_2_o_ap_vld_assign_proc : process(and_ln119_2_fu_416_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_2_fu_416_p2)) then 
            rs_entry_4_1_2_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_3_o_assign_proc : process(value_r, rs_entry_4_1_3_i, and_ln119_3_fu_492_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_3_fu_492_p2)) then 
            rs_entry_4_1_3_o <= value_r;
        else 
            rs_entry_4_1_3_o <= rs_entry_4_1_3_i;
        end if; 
    end process;


    rs_entry_4_1_3_o_ap_vld_assign_proc : process(and_ln119_3_fu_492_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_3_fu_492_p2)) then 
            rs_entry_4_1_3_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_4_o_assign_proc : process(value_r, rs_entry_4_1_4_i, and_ln119_4_fu_568_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_4_fu_568_p2)) then 
            rs_entry_4_1_4_o <= value_r;
        else 
            rs_entry_4_1_4_o <= rs_entry_4_1_4_i;
        end if; 
    end process;


    rs_entry_4_1_4_o_ap_vld_assign_proc : process(and_ln119_4_fu_568_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_4_fu_568_p2)) then 
            rs_entry_4_1_4_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_4_1_5_o_assign_proc : process(value_r, rs_entry_4_1_5_i, and_ln119_5_fu_644_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_5_fu_644_p2)) then 
            rs_entry_4_1_5_o <= value_r;
        else 
            rs_entry_4_1_5_o <= rs_entry_4_1_5_i;
        end if; 
    end process;


    rs_entry_4_1_5_o_ap_vld_assign_proc : process(and_ln119_5_fu_644_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_5_fu_644_p2)) then 
            rs_entry_4_1_5_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_4_1_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_0_o_assign_proc : process(rs_entry_r1_stat_0_i, and_ln115_fu_226_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_fu_226_p2)) then 
            rs_entry_r1_stat_0_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_0_o <= rs_entry_r1_stat_0_i;
        end if; 
    end process;


    rs_entry_r1_stat_0_o_ap_vld_assign_proc : process(and_ln115_fu_226_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_fu_226_p2)) then 
            rs_entry_r1_stat_0_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_1_o_assign_proc : process(rs_entry_r1_stat_1_i, and_ln115_1_fu_302_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_1_fu_302_p2)) then 
            rs_entry_r1_stat_1_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_1_o <= rs_entry_r1_stat_1_i;
        end if; 
    end process;


    rs_entry_r1_stat_1_o_ap_vld_assign_proc : process(and_ln115_1_fu_302_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_1_fu_302_p2)) then 
            rs_entry_r1_stat_1_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_2_o_assign_proc : process(rs_entry_r1_stat_2_i, and_ln115_2_fu_378_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_2_fu_378_p2)) then 
            rs_entry_r1_stat_2_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_2_o <= rs_entry_r1_stat_2_i;
        end if; 
    end process;


    rs_entry_r1_stat_2_o_ap_vld_assign_proc : process(and_ln115_2_fu_378_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_2_fu_378_p2)) then 
            rs_entry_r1_stat_2_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_3_o_assign_proc : process(rs_entry_r1_stat_3_i, and_ln115_3_fu_454_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_3_fu_454_p2)) then 
            rs_entry_r1_stat_3_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_3_o <= rs_entry_r1_stat_3_i;
        end if; 
    end process;


    rs_entry_r1_stat_3_o_ap_vld_assign_proc : process(and_ln115_3_fu_454_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_3_fu_454_p2)) then 
            rs_entry_r1_stat_3_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_4_o_assign_proc : process(rs_entry_r1_stat_4_i, and_ln115_4_fu_530_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_4_fu_530_p2)) then 
            rs_entry_r1_stat_4_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_4_o <= rs_entry_r1_stat_4_i;
        end if; 
    end process;


    rs_entry_r1_stat_4_o_ap_vld_assign_proc : process(and_ln115_4_fu_530_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_4_fu_530_p2)) then 
            rs_entry_r1_stat_4_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r1_stat_5_o_assign_proc : process(rs_entry_r1_stat_5_i, and_ln115_5_fu_606_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_5_fu_606_p2)) then 
            rs_entry_r1_stat_5_o <= ap_const_lv32_1;
        else 
            rs_entry_r1_stat_5_o <= rs_entry_r1_stat_5_i;
        end if; 
    end process;


    rs_entry_r1_stat_5_o_ap_vld_assign_proc : process(and_ln115_5_fu_606_p2)
    begin
        if ((ap_const_lv1_1 = and_ln115_5_fu_606_p2)) then 
            rs_entry_r1_stat_5_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r1_stat_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_0_o_assign_proc : process(rs_entry_r2_stat_0_i, and_ln119_fu_264_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_fu_264_p2)) then 
            rs_entry_r2_stat_0_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_0_o <= rs_entry_r2_stat_0_i;
        end if; 
    end process;


    rs_entry_r2_stat_0_o_ap_vld_assign_proc : process(and_ln119_fu_264_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_fu_264_p2)) then 
            rs_entry_r2_stat_0_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_1_o_assign_proc : process(rs_entry_r2_stat_1_i, and_ln119_1_fu_340_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_1_fu_340_p2)) then 
            rs_entry_r2_stat_1_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_1_o <= rs_entry_r2_stat_1_i;
        end if; 
    end process;


    rs_entry_r2_stat_1_o_ap_vld_assign_proc : process(and_ln119_1_fu_340_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_1_fu_340_p2)) then 
            rs_entry_r2_stat_1_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_2_o_assign_proc : process(rs_entry_r2_stat_2_i, and_ln119_2_fu_416_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_2_fu_416_p2)) then 
            rs_entry_r2_stat_2_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_2_o <= rs_entry_r2_stat_2_i;
        end if; 
    end process;


    rs_entry_r2_stat_2_o_ap_vld_assign_proc : process(and_ln119_2_fu_416_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_2_fu_416_p2)) then 
            rs_entry_r2_stat_2_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_3_o_assign_proc : process(rs_entry_r2_stat_3_i, and_ln119_3_fu_492_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_3_fu_492_p2)) then 
            rs_entry_r2_stat_3_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_3_o <= rs_entry_r2_stat_3_i;
        end if; 
    end process;


    rs_entry_r2_stat_3_o_ap_vld_assign_proc : process(and_ln119_3_fu_492_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_3_fu_492_p2)) then 
            rs_entry_r2_stat_3_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_4_o_assign_proc : process(rs_entry_r2_stat_4_i, and_ln119_4_fu_568_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_4_fu_568_p2)) then 
            rs_entry_r2_stat_4_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_4_o <= rs_entry_r2_stat_4_i;
        end if; 
    end process;


    rs_entry_r2_stat_4_o_ap_vld_assign_proc : process(and_ln119_4_fu_568_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_4_fu_568_p2)) then 
            rs_entry_r2_stat_4_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rs_entry_r2_stat_5_o_assign_proc : process(rs_entry_r2_stat_5_i, and_ln119_5_fu_644_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_5_fu_644_p2)) then 
            rs_entry_r2_stat_5_o <= ap_const_lv32_1;
        else 
            rs_entry_r2_stat_5_o <= rs_entry_r2_stat_5_i;
        end if; 
    end process;


    rs_entry_r2_stat_5_o_ap_vld_assign_proc : process(and_ln119_5_fu_644_p2)
    begin
        if ((ap_const_lv1_1 = and_ln119_5_fu_644_p2)) then 
            rs_entry_r2_stat_5_o_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_r2_stat_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_0 <= ap_const_lv1_1;

    rs_entry_valid_0_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if ((trunc_ln111_fu_166_p1 = ap_const_lv3_0)) then 
            rs_entry_valid_0_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_1 <= ap_const_lv1_1;

    rs_entry_valid_1_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if ((trunc_ln111_fu_166_p1 = ap_const_lv3_1)) then 
            rs_entry_valid_1_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_2 <= ap_const_lv1_1;

    rs_entry_valid_2_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if ((trunc_ln111_fu_166_p1 = ap_const_lv3_2)) then 
            rs_entry_valid_2_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_3 <= ap_const_lv1_1;

    rs_entry_valid_3_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if ((trunc_ln111_fu_166_p1 = ap_const_lv3_3)) then 
            rs_entry_valid_3_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_4 <= ap_const_lv1_1;

    rs_entry_valid_4_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if ((trunc_ln111_fu_166_p1 = ap_const_lv3_4)) then 
            rs_entry_valid_4_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_entry_valid_5 <= ap_const_lv1_1;

    rs_entry_valid_5_ap_vld_assign_proc : process(trunc_ln111_fu_166_p1)
    begin
        if (((trunc_ln111_fu_166_p1 = ap_const_lv3_5) or ((trunc_ln111_fu_166_p1 = ap_const_lv3_6) or (trunc_ln111_fu_166_p1 = ap_const_lv3_7)))) then 
            rs_entry_valid_5_ap_vld <= ap_const_logic_1;
        else 
            rs_entry_valid_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rs_multipliers_status_busy_0 <= ap_const_lv1_0;

    rs_multipliers_status_busy_0_ap_vld_assign_proc : process(and_ln108_fu_154_p2)
    begin
        if ((ap_const_lv1_1 = and_ln108_fu_154_p2)) then 
            rs_multipliers_status_busy_0_ap_vld <= ap_const_logic_1;
        else 
            rs_multipliers_status_busy_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_110_p3 <= sym(31 downto 31);
    trunc_ln111_fu_166_p1 <= sym(3 - 1 downto 0);
    xor_ln105_fu_118_p2 <= (tmp_fu_110_p3 xor ap_const_lv1_1);
end behav;
