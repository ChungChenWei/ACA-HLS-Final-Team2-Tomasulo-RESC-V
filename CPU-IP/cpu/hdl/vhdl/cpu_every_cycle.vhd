-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cpu_every_cycle is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    instruction_i : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (31 downto 0);
    adder_to_front_end_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    adder_to_front_end_empty_n : IN STD_LOGIC;
    adder_to_front_end_read : OUT STD_LOGIC;
    adder_to_front_end_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    adder_to_front_end_full_n : IN STD_LOGIC;
    adder_to_front_end_write : OUT STD_LOGIC;
    rf_reg_stat_0_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_0_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_0_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_1_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_1_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_1_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_2_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_2_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_2_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_3_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_3_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_3_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_4_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_4_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_4_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_5_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_5_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_5_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_6_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_6_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_6_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_7_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_7_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_7_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_8_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_8_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_8_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_9_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_9_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_9_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_10_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_10_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_10_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_11_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_11_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_11_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_12_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_12_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_12_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_13_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_13_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_13_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_14_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_14_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_14_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_15_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_15_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_15_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_16_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_16_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_16_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_17_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_17_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_17_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_18_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_18_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_18_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_19_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_19_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_19_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_20_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_20_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_20_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_21_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_21_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_21_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_22_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_22_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_22_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_23_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_23_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_23_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_24_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_24_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_24_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_25_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_25_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_25_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_26_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_26_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_26_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_27_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_27_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_27_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_28_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_28_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_28_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_29_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_29_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_29_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_30_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_30_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_30_constprop_o_ap_vld : OUT STD_LOGIC;
    rf_reg_stat_31_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_31_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rf_reg_stat_31_constprop_o_ap_vld : OUT STD_LOGIC;
    multiplier_to_frontend_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    multiplier_to_frontend_empty_n : IN STD_LOGIC;
    multiplier_to_frontend_read : OUT STD_LOGIC;
    multiplier_to_frontend_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    multiplier_to_frontend_full_n : IN STD_LOGIC;
    multiplier_to_frontend_write : OUT STD_LOGIC;
    front_end_to_adder_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    front_end_to_adder_empty_n : IN STD_LOGIC;
    front_end_to_adder_read : OUT STD_LOGIC;
    front_end_to_adder_din : OUT STD_LOGIC_VECTOR (159 downto 0);
    front_end_to_adder_full_n : IN STD_LOGIC;
    front_end_to_adder_write : OUT STD_LOGIC;
    front_end_to_multiplier_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    front_end_to_multiplier_empty_n : IN STD_LOGIC;
    front_end_to_multiplier_read : OUT STD_LOGIC;
    front_end_to_multiplier_din : OUT STD_LOGIC_VECTOR (159 downto 0);
    front_end_to_multiplier_full_n : IN STD_LOGIC;
    front_end_to_multiplier_write : OUT STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cpu_every_cycle is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal adders_busy_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal adders_result_src_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal adders_result_value_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal adders_counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal multipliers_result_src_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal multipliers_result_value_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal multipliers_counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal multipliers_busy_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal adder_to_front_end_o_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal multiplier_to_frontend_o_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal front_end_to_adder_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_nbreadreq_fu_480_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal front_end_to_multiplier_i_blk_n : STD_LOGIC;
    signal tmp_3_nbreadreq_fu_501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_front_end_fu_698_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_front_end_fu_698_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_return_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal call_ret1_reg_1421_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_reg_1421_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_r1_1_reg_1443 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r2_1_reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_start : STD_LOGIC;
    signal grp_front_end_fu_698_ap_done : STD_LOGIC;
    signal grp_front_end_fu_698_ap_idle : STD_LOGIC;
    signal grp_front_end_fu_698_ap_ready : STD_LOGIC;
    signal grp_front_end_fu_698_adder_to_front_end_read : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_0_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_1_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_2_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_3_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_4_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_5_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_6_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_7_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_8_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_9_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_10_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_11_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_12_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_13_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_14_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_15_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_16_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_17_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_18_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_19_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_20_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_21_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_22_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_23_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_24_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_25_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_26_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_27_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_28_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_29_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_30_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_rf_reg_stat_31_constprop_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld : STD_LOGIC;
    signal grp_front_end_fu_698_multiplier_to_frontend_read : STD_LOGIC;
    signal grp_front_end_fu_698_front_end_to_adder_din : STD_LOGIC_VECTOR (159 downto 0);
    signal grp_front_end_fu_698_front_end_to_adder_write : STD_LOGIC;
    signal grp_front_end_fu_698_front_end_to_multiplier_din : STD_LOGIC_VECTOR (159 downto 0);
    signal grp_front_end_fu_698_front_end_to_multiplier_write : STD_LOGIC;
    signal adders_busy_0_flag_0_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal input_op_fu_994_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal adders_busy_0_loc_0_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op74_write_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln68_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal multipliers_busy_0_flag_0_reg_613 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln124_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal multipliers_busy_0_loc_0_reg_629 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op112_write_state6 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln136_fu_1182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_front_end_fu_698_ap_start_reg : STD_LOGIC := '0';
    signal sub_ln58_fu_1030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln54_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln126_fu_1168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r1_fu_1004_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r2_fu_1014_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_op_1_fu_1120_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_condition_613 : BOOLEAN;
    signal ap_condition_606 : BOOLEAN;
    signal ap_condition_596 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cpu_front_end IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instruction_i : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value32_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value33_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value34_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value35_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value36_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value37_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value38_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value39_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value40_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value41_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value42_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value43_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value44_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value45_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value46_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value47_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value48_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value49_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value50_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value51_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value52_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value53_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value54_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value55_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value56_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value57_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value58_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value59_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value60_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value61_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_value62_read : IN STD_LOGIC_VECTOR (31 downto 0);
        adder_to_front_end_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        adder_to_front_end_empty_n : IN STD_LOGIC;
        adder_to_front_end_read : OUT STD_LOGIC;
        rf_reg_stat_0_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_0_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_0_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_1_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_1_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_1_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_2_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_2_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_2_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_3_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_3_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_3_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_4_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_4_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_4_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_5_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_5_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_5_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_6_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_6_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_6_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_7_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_7_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_7_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_8_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_8_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_8_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_9_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_9_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_9_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_10_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_10_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_10_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_11_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_11_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_11_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_12_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_12_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_12_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_13_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_13_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_13_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_14_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_14_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_14_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_15_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_15_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_15_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_16_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_16_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_16_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_17_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_17_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_17_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_18_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_18_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_18_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_19_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_19_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_19_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_20_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_20_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_20_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_21_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_21_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_21_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_22_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_22_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_22_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_23_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_23_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_23_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_24_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_24_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_24_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_25_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_25_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_25_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_26_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_26_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_26_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_27_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_27_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_27_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_28_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_28_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_28_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_29_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_29_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_29_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_30_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_30_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_30_constprop_o_ap_vld : OUT STD_LOGIC;
        rf_reg_stat_31_constprop_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_31_constprop_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rf_reg_stat_31_constprop_o_ap_vld : OUT STD_LOGIC;
        multiplier_to_frontend_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        multiplier_to_frontend_empty_n : IN STD_LOGIC;
        multiplier_to_frontend_read : OUT STD_LOGIC;
        front_end_to_adder_din : OUT STD_LOGIC_VECTOR (159 downto 0);
        front_end_to_adder_full_n : IN STD_LOGIC;
        front_end_to_adder_write : OUT STD_LOGIC;
        front_end_to_multiplier_din : OUT STD_LOGIC_VECTOR (159 downto 0);
        front_end_to_multiplier_full_n : IN STD_LOGIC;
        front_end_to_multiplier_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cpu_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_front_end_fu_698 : component cpu_front_end
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_front_end_fu_698_ap_start,
        ap_done => grp_front_end_fu_698_ap_done,
        ap_idle => grp_front_end_fu_698_ap_idle,
        ap_ready => grp_front_end_fu_698_ap_ready,
        instruction_i => instruction_i,
        p_read => p_read,
        rf_value_read => p_read,
        p_read1 => p_read1,
        rf_value32_read => p_read1,
        p_read2 => p_read2,
        rf_value33_read => p_read2,
        p_read3 => p_read3,
        rf_value34_read => p_read3,
        p_read4 => p_read4,
        rf_value35_read => p_read4,
        p_read5 => p_read5,
        rf_value36_read => p_read5,
        p_read6 => p_read6,
        rf_value37_read => p_read6,
        p_read7 => p_read7,
        rf_value38_read => p_read7,
        p_read8 => p_read8,
        rf_value39_read => p_read8,
        p_read9 => p_read9,
        rf_value40_read => p_read9,
        p_read10 => p_read10,
        rf_value41_read => p_read10,
        p_read11 => p_read11,
        rf_value42_read => p_read11,
        p_read12 => p_read12,
        rf_value43_read => p_read12,
        p_read13 => p_read13,
        rf_value44_read => p_read13,
        p_read14 => p_read14,
        rf_value45_read => p_read14,
        p_read15 => p_read15,
        rf_value46_read => p_read15,
        p_read16 => p_read16,
        rf_value47_read => p_read16,
        p_read17 => p_read17,
        rf_value48_read => p_read17,
        p_read18 => p_read18,
        rf_value49_read => p_read18,
        p_read19 => p_read19,
        rf_value50_read => p_read19,
        p_read20 => p_read20,
        rf_value51_read => p_read20,
        p_read21 => p_read21,
        rf_value52_read => p_read21,
        p_read22 => p_read22,
        rf_value53_read => p_read22,
        p_read23 => p_read23,
        rf_value54_read => p_read23,
        p_read24 => p_read24,
        rf_value55_read => p_read24,
        p_read25 => p_read25,
        rf_value56_read => p_read25,
        p_read26 => p_read26,
        rf_value57_read => p_read26,
        p_read27 => p_read27,
        rf_value58_read => p_read27,
        p_read28 => p_read28,
        rf_value59_read => p_read28,
        p_read29 => p_read29,
        rf_value60_read => p_read29,
        p_read30 => p_read30,
        rf_value61_read => p_read30,
        p_read31 => p_read31,
        rf_value62_read => p_read31,
        adder_to_front_end_dout => adder_to_front_end_dout,
        adder_to_front_end_empty_n => adder_to_front_end_empty_n,
        adder_to_front_end_read => grp_front_end_fu_698_adder_to_front_end_read,
        rf_reg_stat_0_constprop_i => rf_reg_stat_0_constprop_i,
        rf_reg_stat_0_constprop_o => grp_front_end_fu_698_rf_reg_stat_0_constprop_o,
        rf_reg_stat_0_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld,
        rf_reg_stat_1_constprop_i => rf_reg_stat_1_constprop_i,
        rf_reg_stat_1_constprop_o => grp_front_end_fu_698_rf_reg_stat_1_constprop_o,
        rf_reg_stat_1_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld,
        rf_reg_stat_2_constprop_i => rf_reg_stat_2_constprop_i,
        rf_reg_stat_2_constprop_o => grp_front_end_fu_698_rf_reg_stat_2_constprop_o,
        rf_reg_stat_2_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld,
        rf_reg_stat_3_constprop_i => rf_reg_stat_3_constprop_i,
        rf_reg_stat_3_constprop_o => grp_front_end_fu_698_rf_reg_stat_3_constprop_o,
        rf_reg_stat_3_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld,
        rf_reg_stat_4_constprop_i => rf_reg_stat_4_constprop_i,
        rf_reg_stat_4_constprop_o => grp_front_end_fu_698_rf_reg_stat_4_constprop_o,
        rf_reg_stat_4_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld,
        rf_reg_stat_5_constprop_i => rf_reg_stat_5_constprop_i,
        rf_reg_stat_5_constprop_o => grp_front_end_fu_698_rf_reg_stat_5_constprop_o,
        rf_reg_stat_5_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld,
        rf_reg_stat_6_constprop_i => rf_reg_stat_6_constprop_i,
        rf_reg_stat_6_constprop_o => grp_front_end_fu_698_rf_reg_stat_6_constprop_o,
        rf_reg_stat_6_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld,
        rf_reg_stat_7_constprop_i => rf_reg_stat_7_constprop_i,
        rf_reg_stat_7_constprop_o => grp_front_end_fu_698_rf_reg_stat_7_constprop_o,
        rf_reg_stat_7_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld,
        rf_reg_stat_8_constprop_i => rf_reg_stat_8_constprop_i,
        rf_reg_stat_8_constprop_o => grp_front_end_fu_698_rf_reg_stat_8_constprop_o,
        rf_reg_stat_8_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld,
        rf_reg_stat_9_constprop_i => rf_reg_stat_9_constprop_i,
        rf_reg_stat_9_constprop_o => grp_front_end_fu_698_rf_reg_stat_9_constprop_o,
        rf_reg_stat_9_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld,
        rf_reg_stat_10_constprop_i => rf_reg_stat_10_constprop_i,
        rf_reg_stat_10_constprop_o => grp_front_end_fu_698_rf_reg_stat_10_constprop_o,
        rf_reg_stat_10_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld,
        rf_reg_stat_11_constprop_i => rf_reg_stat_11_constprop_i,
        rf_reg_stat_11_constprop_o => grp_front_end_fu_698_rf_reg_stat_11_constprop_o,
        rf_reg_stat_11_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld,
        rf_reg_stat_12_constprop_i => rf_reg_stat_12_constprop_i,
        rf_reg_stat_12_constprop_o => grp_front_end_fu_698_rf_reg_stat_12_constprop_o,
        rf_reg_stat_12_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld,
        rf_reg_stat_13_constprop_i => rf_reg_stat_13_constprop_i,
        rf_reg_stat_13_constprop_o => grp_front_end_fu_698_rf_reg_stat_13_constprop_o,
        rf_reg_stat_13_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld,
        rf_reg_stat_14_constprop_i => rf_reg_stat_14_constprop_i,
        rf_reg_stat_14_constprop_o => grp_front_end_fu_698_rf_reg_stat_14_constprop_o,
        rf_reg_stat_14_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld,
        rf_reg_stat_15_constprop_i => rf_reg_stat_15_constprop_i,
        rf_reg_stat_15_constprop_o => grp_front_end_fu_698_rf_reg_stat_15_constprop_o,
        rf_reg_stat_15_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld,
        rf_reg_stat_16_constprop_i => rf_reg_stat_16_constprop_i,
        rf_reg_stat_16_constprop_o => grp_front_end_fu_698_rf_reg_stat_16_constprop_o,
        rf_reg_stat_16_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld,
        rf_reg_stat_17_constprop_i => rf_reg_stat_17_constprop_i,
        rf_reg_stat_17_constprop_o => grp_front_end_fu_698_rf_reg_stat_17_constprop_o,
        rf_reg_stat_17_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld,
        rf_reg_stat_18_constprop_i => rf_reg_stat_18_constprop_i,
        rf_reg_stat_18_constprop_o => grp_front_end_fu_698_rf_reg_stat_18_constprop_o,
        rf_reg_stat_18_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld,
        rf_reg_stat_19_constprop_i => rf_reg_stat_19_constprop_i,
        rf_reg_stat_19_constprop_o => grp_front_end_fu_698_rf_reg_stat_19_constprop_o,
        rf_reg_stat_19_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld,
        rf_reg_stat_20_constprop_i => rf_reg_stat_20_constprop_i,
        rf_reg_stat_20_constprop_o => grp_front_end_fu_698_rf_reg_stat_20_constprop_o,
        rf_reg_stat_20_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld,
        rf_reg_stat_21_constprop_i => rf_reg_stat_21_constprop_i,
        rf_reg_stat_21_constprop_o => grp_front_end_fu_698_rf_reg_stat_21_constprop_o,
        rf_reg_stat_21_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld,
        rf_reg_stat_22_constprop_i => rf_reg_stat_22_constprop_i,
        rf_reg_stat_22_constprop_o => grp_front_end_fu_698_rf_reg_stat_22_constprop_o,
        rf_reg_stat_22_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld,
        rf_reg_stat_23_constprop_i => rf_reg_stat_23_constprop_i,
        rf_reg_stat_23_constprop_o => grp_front_end_fu_698_rf_reg_stat_23_constprop_o,
        rf_reg_stat_23_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld,
        rf_reg_stat_24_constprop_i => rf_reg_stat_24_constprop_i,
        rf_reg_stat_24_constprop_o => grp_front_end_fu_698_rf_reg_stat_24_constprop_o,
        rf_reg_stat_24_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld,
        rf_reg_stat_25_constprop_i => rf_reg_stat_25_constprop_i,
        rf_reg_stat_25_constprop_o => grp_front_end_fu_698_rf_reg_stat_25_constprop_o,
        rf_reg_stat_25_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld,
        rf_reg_stat_26_constprop_i => rf_reg_stat_26_constprop_i,
        rf_reg_stat_26_constprop_o => grp_front_end_fu_698_rf_reg_stat_26_constprop_o,
        rf_reg_stat_26_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld,
        rf_reg_stat_27_constprop_i => rf_reg_stat_27_constprop_i,
        rf_reg_stat_27_constprop_o => grp_front_end_fu_698_rf_reg_stat_27_constprop_o,
        rf_reg_stat_27_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld,
        rf_reg_stat_28_constprop_i => rf_reg_stat_28_constprop_i,
        rf_reg_stat_28_constprop_o => grp_front_end_fu_698_rf_reg_stat_28_constprop_o,
        rf_reg_stat_28_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld,
        rf_reg_stat_29_constprop_i => rf_reg_stat_29_constprop_i,
        rf_reg_stat_29_constprop_o => grp_front_end_fu_698_rf_reg_stat_29_constprop_o,
        rf_reg_stat_29_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld,
        rf_reg_stat_30_constprop_i => rf_reg_stat_30_constprop_i,
        rf_reg_stat_30_constprop_o => grp_front_end_fu_698_rf_reg_stat_30_constprop_o,
        rf_reg_stat_30_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld,
        rf_reg_stat_31_constprop_i => rf_reg_stat_31_constprop_i,
        rf_reg_stat_31_constprop_o => grp_front_end_fu_698_rf_reg_stat_31_constprop_o,
        rf_reg_stat_31_constprop_o_ap_vld => grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld,
        multiplier_to_frontend_dout => multiplier_to_frontend_dout,
        multiplier_to_frontend_empty_n => multiplier_to_frontend_empty_n,
        multiplier_to_frontend_read => grp_front_end_fu_698_multiplier_to_frontend_read,
        front_end_to_adder_din => grp_front_end_fu_698_front_end_to_adder_din,
        front_end_to_adder_full_n => front_end_to_adder_full_n,
        front_end_to_adder_write => grp_front_end_fu_698_front_end_to_adder_write,
        front_end_to_multiplier_din => grp_front_end_fu_698_front_end_to_multiplier_din,
        front_end_to_multiplier_full_n => front_end_to_multiplier_full_n,
        front_end_to_multiplier_write => grp_front_end_fu_698_front_end_to_multiplier_write,
        ap_return_0 => grp_front_end_fu_698_ap_return_0,
        ap_return_1 => grp_front_end_fu_698_ap_return_1,
        ap_return_2 => grp_front_end_fu_698_ap_return_2,
        ap_return_3 => grp_front_end_fu_698_ap_return_3,
        ap_return_4 => grp_front_end_fu_698_ap_return_4,
        ap_return_5 => grp_front_end_fu_698_ap_return_5,
        ap_return_6 => grp_front_end_fu_698_ap_return_6,
        ap_return_7 => grp_front_end_fu_698_ap_return_7,
        ap_return_8 => grp_front_end_fu_698_ap_return_8,
        ap_return_9 => grp_front_end_fu_698_ap_return_9,
        ap_return_10 => grp_front_end_fu_698_ap_return_10,
        ap_return_11 => grp_front_end_fu_698_ap_return_11,
        ap_return_12 => grp_front_end_fu_698_ap_return_12,
        ap_return_13 => grp_front_end_fu_698_ap_return_13,
        ap_return_14 => grp_front_end_fu_698_ap_return_14,
        ap_return_15 => grp_front_end_fu_698_ap_return_15,
        ap_return_16 => grp_front_end_fu_698_ap_return_16,
        ap_return_17 => grp_front_end_fu_698_ap_return_17,
        ap_return_18 => grp_front_end_fu_698_ap_return_18,
        ap_return_19 => grp_front_end_fu_698_ap_return_19,
        ap_return_20 => grp_front_end_fu_698_ap_return_20,
        ap_return_21 => grp_front_end_fu_698_ap_return_21,
        ap_return_22 => grp_front_end_fu_698_ap_return_22,
        ap_return_23 => grp_front_end_fu_698_ap_return_23,
        ap_return_24 => grp_front_end_fu_698_ap_return_24,
        ap_return_25 => grp_front_end_fu_698_ap_return_25,
        ap_return_26 => grp_front_end_fu_698_ap_return_26,
        ap_return_27 => grp_front_end_fu_698_ap_return_27,
        ap_return_28 => grp_front_end_fu_698_ap_return_28,
        ap_return_29 => grp_front_end_fu_698_ap_return_29,
        ap_return_30 => grp_front_end_fu_698_ap_return_30,
        ap_return_31 => grp_front_end_fu_698_ap_return_31,
        ap_return_32 => grp_front_end_fu_698_ap_return_32);

    mul_32s_32s_32_1_1_U367 : component cpu_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_r1_1_reg_1443,
        din1 => tmp_r2_1_reg_1448,
        dout => mul_ln126_fu_1168_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_front_end_fu_698_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_front_end_fu_698_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_front_end_fu_698_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_front_end_fu_698_ap_ready = ap_const_logic_1)) then 
                    grp_front_end_fu_698_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    adders_busy_0_flag_0_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                adders_busy_0_flag_0_reg_522 <= ap_const_lv1_0;
            elsif (((not((input_op_fu_994_p4 = ap_const_lv32_3)) and not((input_op_fu_994_p4 = ap_const_lv32_2)) and not((input_op_fu_994_p4 = ap_const_lv32_1)) and not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (input_op_fu_994_p4 = ap_const_lv32_3) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (((input_op_fu_994_p4 = ap_const_lv32_2) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)) or ((input_op_fu_994_p4 = ap_const_lv32_1) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)))))) then 
                adders_busy_0_flag_0_reg_522 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    adders_busy_0_loc_0_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                adders_busy_0_loc_0_reg_541 <= adders_busy_0;
            elsif (((not((input_op_fu_994_p4 = ap_const_lv32_3)) and not((input_op_fu_994_p4 = ap_const_lv32_2)) and not((input_op_fu_994_p4 = ap_const_lv32_1)) and not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (input_op_fu_994_p4 = ap_const_lv32_3) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (((input_op_fu_994_p4 = ap_const_lv32_2) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)) or ((input_op_fu_994_p4 = ap_const_lv32_1) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)))))) then 
                adders_busy_0_loc_0_reg_541 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    adders_result_value_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_596)) then
                if ((ap_const_boolean_1 = ap_condition_606)) then 
                    adders_result_value_0 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_613)) then 
                    adders_result_value_0 <= add_ln54_fu_1042_p2;
                elsif (((input_op_fu_994_p4 = ap_const_lv32_3) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1))) then 
                    adders_result_value_0 <= sub_ln58_fu_1030_p2;
                end if;
            end if; 
        end if;
    end process;

    multipliers_busy_0_flag_0_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                multipliers_busy_0_flag_0_reg_613 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (icmp_ln124_fu_1156_p2 = ap_const_lv1_0) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                multipliers_busy_0_flag_0_reg_613 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    multipliers_busy_0_loc_0_reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                multipliers_busy_0_loc_0_reg_629 <= multipliers_busy_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (icmp_ln124_fu_1156_p2 = ap_const_lv1_0) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                multipliers_busy_0_loc_0_reg_629 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    multipliers_result_value_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (icmp_ln124_fu_1156_p2 = ap_const_lv1_0) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                multipliers_result_value_0 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                multipliers_result_value_0 <= mul_ln126_fu_1168_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                adders_busy_0 <= ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                adders_counter <= ap_phi_mux_adders_counter_new_0_phi_fu_603_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                adders_result_src_0 <= front_end_to_adder_dout(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                call_ret1_reg_1421_0 <= grp_front_end_fu_698_ap_return_0;
                call_ret1_reg_1421_1 <= grp_front_end_fu_698_ap_return_1;
                call_ret1_reg_1421_10 <= grp_front_end_fu_698_ap_return_10;
                call_ret1_reg_1421_11 <= grp_front_end_fu_698_ap_return_11;
                call_ret1_reg_1421_12 <= grp_front_end_fu_698_ap_return_12;
                call_ret1_reg_1421_13 <= grp_front_end_fu_698_ap_return_13;
                call_ret1_reg_1421_14 <= grp_front_end_fu_698_ap_return_14;
                call_ret1_reg_1421_15 <= grp_front_end_fu_698_ap_return_15;
                call_ret1_reg_1421_16 <= grp_front_end_fu_698_ap_return_16;
                call_ret1_reg_1421_17 <= grp_front_end_fu_698_ap_return_17;
                call_ret1_reg_1421_18 <= grp_front_end_fu_698_ap_return_18;
                call_ret1_reg_1421_19 <= grp_front_end_fu_698_ap_return_19;
                call_ret1_reg_1421_2 <= grp_front_end_fu_698_ap_return_2;
                call_ret1_reg_1421_20 <= grp_front_end_fu_698_ap_return_20;
                call_ret1_reg_1421_21 <= grp_front_end_fu_698_ap_return_21;
                call_ret1_reg_1421_22 <= grp_front_end_fu_698_ap_return_22;
                call_ret1_reg_1421_23 <= grp_front_end_fu_698_ap_return_23;
                call_ret1_reg_1421_24 <= grp_front_end_fu_698_ap_return_24;
                call_ret1_reg_1421_25 <= grp_front_end_fu_698_ap_return_25;
                call_ret1_reg_1421_26 <= grp_front_end_fu_698_ap_return_26;
                call_ret1_reg_1421_27 <= grp_front_end_fu_698_ap_return_27;
                call_ret1_reg_1421_28 <= grp_front_end_fu_698_ap_return_28;
                call_ret1_reg_1421_29 <= grp_front_end_fu_698_ap_return_29;
                call_ret1_reg_1421_3 <= grp_front_end_fu_698_ap_return_3;
                call_ret1_reg_1421_30 <= grp_front_end_fu_698_ap_return_30;
                call_ret1_reg_1421_31 <= grp_front_end_fu_698_ap_return_31;
                call_ret1_reg_1421_32 <= grp_front_end_fu_698_ap_return_32;
                call_ret1_reg_1421_4 <= grp_front_end_fu_698_ap_return_4;
                call_ret1_reg_1421_5 <= grp_front_end_fu_698_ap_return_5;
                call_ret1_reg_1421_6 <= grp_front_end_fu_698_ap_return_6;
                call_ret1_reg_1421_7 <= grp_front_end_fu_698_ap_return_7;
                call_ret1_reg_1421_8 <= grp_front_end_fu_698_ap_return_8;
                call_ret1_reg_1421_9 <= grp_front_end_fu_698_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                multipliers_busy_0 <= ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                multipliers_counter <= ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                multipliers_result_src_0 <= front_end_to_multiplier_dout(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_r1_1_reg_1443 <= front_end_to_multiplier_dout(127 downto 96);
                tmp_r2_1_reg_1448 <= front_end_to_multiplier_dout(159 downto 128);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, adder_to_front_end_full_n, multiplier_to_frontend_full_n, front_end_to_adder_empty_n, front_end_to_multiplier_empty_n, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state3, tmp_nbreadreq_fu_480_p3, tmp_3_nbreadreq_fu_501_p3, ap_CS_fsm_state2, grp_front_end_fu_698_ap_done, ap_predicate_op74_write_state4, icmp_ln124_fu_1156_p2, ap_predicate_op112_write_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_front_end_fu_698_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (icmp_ln124_fu_1156_p2 = ap_const_lv1_1) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln124_fu_1156_p2 = ap_const_lv1_0) or (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if ((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln136_fu_1182_p2 <= std_logic_vector(unsigned(multipliers_counter) + unsigned(ap_const_lv32_1));
    add_ln54_fu_1042_p2 <= std_logic_vector(unsigned(tmp_r1_fu_1004_p4) + unsigned(tmp_r2_fu_1014_p4));
    add_ln68_fu_1064_p2 <= std_logic_vector(unsigned(adders_counter) + unsigned(ap_const_lv32_1));
    adder_to_front_end_din <= (adders_result_value_0 & adders_result_src_0);

    adder_to_front_end_o_blk_n_assign_proc : process(adder_to_front_end_full_n, ap_CS_fsm_state4, icmp_ln69_fu_1071_p2, adders_busy_0_loc_0_reg_541)
    begin
        if (((icmp_ln69_fu_1071_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            adder_to_front_end_o_blk_n <= adder_to_front_end_full_n;
        else 
            adder_to_front_end_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    adder_to_front_end_read_assign_proc : process(ap_CS_fsm_state2, grp_front_end_fu_698_adder_to_front_end_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adder_to_front_end_read <= grp_front_end_fu_698_adder_to_front_end_read;
        else 
            adder_to_front_end_read <= ap_const_logic_0;
        end if; 
    end process;


    adder_to_front_end_write_assign_proc : process(adder_to_front_end_full_n, front_end_to_multiplier_empty_n, ap_CS_fsm_state4, tmp_3_nbreadreq_fu_501_p3, ap_predicate_op74_write_state4)
    begin
        if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            adder_to_front_end_write <= ap_const_logic_1;
        else 
            adder_to_front_end_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state3_assign_proc : process(front_end_to_adder_empty_n, tmp_nbreadreq_fu_480_p3)
    begin
                ap_block_state3 <= ((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(adder_to_front_end_full_n, front_end_to_multiplier_empty_n, tmp_3_nbreadreq_fu_501_p3, ap_predicate_op74_write_state4)
    begin
                ap_block_state4 <= (((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state6_assign_proc : process(multiplier_to_frontend_full_n, ap_predicate_op112_write_state6)
    begin
                ap_block_state6 <= ((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0));
    end process;


    ap_condition_596_assign_proc : process(front_end_to_adder_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_480_p3)
    begin
                ap_condition_596 <= (not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3));
    end process;


    ap_condition_606_assign_proc : process(tmp_nbreadreq_fu_480_p3, input_op_fu_994_p4)
    begin
                ap_condition_606 <= (not((input_op_fu_994_p4 = ap_const_lv32_3)) and not((input_op_fu_994_p4 = ap_const_lv32_2)) and not((input_op_fu_994_p4 = ap_const_lv32_1)) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1));
    end process;


    ap_condition_613_assign_proc : process(tmp_nbreadreq_fu_480_p3, input_op_fu_994_p4)
    begin
                ap_condition_613 <= (((input_op_fu_994_p4 = ap_const_lv32_2) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)) or ((input_op_fu_994_p4 = ap_const_lv32_1) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, multiplier_to_frontend_full_n, ap_CS_fsm_state6, ap_predicate_op112_write_state6)
    begin
        if (((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6_assign_proc : process(ap_CS_fsm_state4, ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8, icmp_ln69_fu_1071_p2, adders_busy_0_flag_0_reg_522, adders_busy_0_loc_0_reg_541)
    begin
        if ((((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln69_fu_1071_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 <= adders_busy_0_flag_0_reg_522;
        elsif (((icmp_ln69_fu_1071_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 <= "X";
        end if; 
    end process;

    ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 <= adders_busy_0_loc_0_reg_541;

    ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6_assign_proc : process(ap_CS_fsm_state4, ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8, icmp_ln69_fu_1071_p2, adders_busy_0_loc_0_reg_541)
    begin
        if ((((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln69_fu_1071_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 <= ap_const_lv1_1;
        elsif (((icmp_ln69_fu_1071_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 <= "X";
        end if; 
    end process;


    ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6_assign_proc : process(ap_CS_fsm_state4, ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8, icmp_ln69_fu_1071_p2, adders_busy_0_loc_0_reg_541)
    begin
        if (((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 <= ap_const_lv1_0;
        elsif ((((icmp_ln69_fu_1071_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln69_fu_1071_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 <= "X";
        end if; 
    end process;


    ap_phi_mux_adders_counter_new_0_phi_fu_603_p6_assign_proc : process(ap_CS_fsm_state4, icmp_ln69_fu_1071_p2, adders_busy_0_loc_0_reg_541, add_ln68_fu_1064_p2)
    begin
        if (((ap_const_lv1_1 = adders_busy_0_loc_0_reg_541) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
            if ((icmp_ln69_fu_1071_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 <= add_ln68_fu_1064_p2;
            elsif ((icmp_ln69_fu_1071_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 <= ap_const_lv32_0;
            else 
                ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6_assign_proc : process(ap_CS_fsm_state6, ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6, icmp_ln137_fu_1189_p2, multipliers_busy_0_flag_0_reg_613, multipliers_busy_0_loc_0_reg_629)
    begin
        if ((((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln137_fu_1189_p2 = ap_const_lv1_0) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 <= multipliers_busy_0_flag_0_reg_613;
        elsif (((icmp_ln137_fu_1189_p2 = ap_const_lv1_1) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 <= "X";
        end if; 
    end process;

    ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 <= multipliers_busy_0_loc_0_reg_629;

    ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6_assign_proc : process(ap_CS_fsm_state6, ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6, icmp_ln137_fu_1189_p2, multipliers_busy_0_loc_0_reg_629)
    begin
        if ((((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln137_fu_1189_p2 = ap_const_lv1_0) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 <= ap_const_lv1_1;
        elsif (((icmp_ln137_fu_1189_p2 = ap_const_lv1_1) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 <= "X";
        end if; 
    end process;


    ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6_assign_proc : process(ap_CS_fsm_state6, ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6, icmp_ln137_fu_1189_p2, multipliers_busy_0_loc_0_reg_629)
    begin
        if (((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 <= ap_const_lv1_0;
        elsif ((((icmp_ln137_fu_1189_p2 = ap_const_lv1_0) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln137_fu_1189_p2 = ap_const_lv1_1) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 <= "X";
        end if; 
    end process;


    ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6_assign_proc : process(ap_CS_fsm_state6, icmp_ln137_fu_1189_p2, multipliers_busy_0_loc_0_reg_629, add_ln136_fu_1182_p2)
    begin
        if (((multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
            if ((icmp_ln137_fu_1189_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 <= add_ln136_fu_1182_p2;
            elsif ((icmp_ln137_fu_1189_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 <= ap_const_lv32_0;
            else 
                ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_predicate_op112_write_state6_assign_proc : process(icmp_ln137_fu_1189_p2, multipliers_busy_0_loc_0_reg_629)
    begin
                ap_predicate_op112_write_state6 <= ((icmp_ln137_fu_1189_p2 = ap_const_lv1_1) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1));
    end process;


    ap_predicate_op74_write_state4_assign_proc : process(icmp_ln69_fu_1071_p2, adders_busy_0_loc_0_reg_541)
    begin
                ap_predicate_op74_write_state4 <= ((icmp_ln69_fu_1071_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = adders_busy_0_loc_0_reg_541));
    end process;


    ap_ready_assign_proc : process(multiplier_to_frontend_full_n, ap_CS_fsm_state6, ap_predicate_op112_write_state6)
    begin
        if ((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= call_ret1_reg_1421_0;
    ap_return_1 <= call_ret1_reg_1421_1;
    ap_return_10 <= call_ret1_reg_1421_10;
    ap_return_11 <= call_ret1_reg_1421_11;
    ap_return_12 <= call_ret1_reg_1421_12;
    ap_return_13 <= call_ret1_reg_1421_13;
    ap_return_14 <= call_ret1_reg_1421_14;
    ap_return_15 <= call_ret1_reg_1421_15;
    ap_return_16 <= call_ret1_reg_1421_16;
    ap_return_17 <= call_ret1_reg_1421_17;
    ap_return_18 <= call_ret1_reg_1421_18;
    ap_return_19 <= call_ret1_reg_1421_19;
    ap_return_2 <= call_ret1_reg_1421_2;
    ap_return_20 <= call_ret1_reg_1421_20;
    ap_return_21 <= call_ret1_reg_1421_21;
    ap_return_22 <= call_ret1_reg_1421_22;
    ap_return_23 <= call_ret1_reg_1421_23;
    ap_return_24 <= call_ret1_reg_1421_24;
    ap_return_25 <= call_ret1_reg_1421_25;
    ap_return_26 <= call_ret1_reg_1421_26;
    ap_return_27 <= call_ret1_reg_1421_27;
    ap_return_28 <= call_ret1_reg_1421_28;
    ap_return_29 <= call_ret1_reg_1421_29;
    ap_return_3 <= call_ret1_reg_1421_3;
    ap_return_30 <= call_ret1_reg_1421_30;
    ap_return_31 <= call_ret1_reg_1421_31;
    ap_return_32 <= call_ret1_reg_1421_32;
    ap_return_4 <= call_ret1_reg_1421_4;
    ap_return_5 <= call_ret1_reg_1421_5;
    ap_return_6 <= call_ret1_reg_1421_6;
    ap_return_7 <= call_ret1_reg_1421_7;
    ap_return_8 <= call_ret1_reg_1421_8;
    ap_return_9 <= call_ret1_reg_1421_9;
    front_end_to_adder_din <= grp_front_end_fu_698_front_end_to_adder_din;

    front_end_to_adder_i_blk_n_assign_proc : process(front_end_to_adder_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_480_p3)
    begin
        if (((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            front_end_to_adder_i_blk_n <= front_end_to_adder_empty_n;
        else 
            front_end_to_adder_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    front_end_to_adder_read_assign_proc : process(front_end_to_adder_empty_n, ap_CS_fsm_state3, tmp_nbreadreq_fu_480_p3)
    begin
        if ((not(((tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (front_end_to_adder_empty_n = ap_const_logic_0))) and (tmp_nbreadreq_fu_480_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            front_end_to_adder_read <= ap_const_logic_1;
        else 
            front_end_to_adder_read <= ap_const_logic_0;
        end if; 
    end process;


    front_end_to_adder_write_assign_proc : process(ap_CS_fsm_state2, grp_front_end_fu_698_front_end_to_adder_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            front_end_to_adder_write <= grp_front_end_fu_698_front_end_to_adder_write;
        else 
            front_end_to_adder_write <= ap_const_logic_0;
        end if; 
    end process;

    front_end_to_multiplier_din <= grp_front_end_fu_698_front_end_to_multiplier_din;

    front_end_to_multiplier_i_blk_n_assign_proc : process(front_end_to_multiplier_empty_n, ap_CS_fsm_state4, tmp_3_nbreadreq_fu_501_p3)
    begin
        if (((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            front_end_to_multiplier_i_blk_n <= front_end_to_multiplier_empty_n;
        else 
            front_end_to_multiplier_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    front_end_to_multiplier_read_assign_proc : process(adder_to_front_end_full_n, front_end_to_multiplier_empty_n, ap_CS_fsm_state4, tmp_3_nbreadreq_fu_501_p3, ap_predicate_op74_write_state4)
    begin
        if ((not((((ap_predicate_op74_write_state4 = ap_const_boolean_1) and (ap_const_logic_0 = adder_to_front_end_full_n)) or ((tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (front_end_to_multiplier_empty_n = ap_const_logic_0)))) and (tmp_3_nbreadreq_fu_501_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            front_end_to_multiplier_read <= ap_const_logic_1;
        else 
            front_end_to_multiplier_read <= ap_const_logic_0;
        end if; 
    end process;


    front_end_to_multiplier_write_assign_proc : process(ap_CS_fsm_state2, grp_front_end_fu_698_front_end_to_multiplier_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            front_end_to_multiplier_write <= grp_front_end_fu_698_front_end_to_multiplier_write;
        else 
            front_end_to_multiplier_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_front_end_fu_698_ap_start <= grp_front_end_fu_698_ap_start_reg;
    icmp_ln124_fu_1156_p2 <= "1" when (input_op_1_fu_1120_p4 = ap_const_lv32_4) else "0";
    icmp_ln137_fu_1189_p2 <= "1" when (add_ln136_fu_1182_p2 = ap_const_lv32_3) else "0";
    icmp_ln69_fu_1071_p2 <= "1" when (adders_counter = ap_const_lv32_0) else "0";
    input_op_1_fu_1120_p4 <= front_end_to_multiplier_dout(95 downto 64);
    input_op_fu_994_p4 <= front_end_to_adder_dout(95 downto 64);
    multiplier_to_frontend_din <= (multipliers_result_value_0 & multipliers_result_src_0);

    multiplier_to_frontend_o_blk_n_assign_proc : process(multiplier_to_frontend_full_n, ap_CS_fsm_state6, icmp_ln137_fu_1189_p2, multipliers_busy_0_loc_0_reg_629)
    begin
        if (((icmp_ln137_fu_1189_p2 = ap_const_lv1_1) and (multipliers_busy_0_loc_0_reg_629 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            multiplier_to_frontend_o_blk_n <= multiplier_to_frontend_full_n;
        else 
            multiplier_to_frontend_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    multiplier_to_frontend_read_assign_proc : process(ap_CS_fsm_state2, grp_front_end_fu_698_multiplier_to_frontend_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            multiplier_to_frontend_read <= grp_front_end_fu_698_multiplier_to_frontend_read;
        else 
            multiplier_to_frontend_read <= ap_const_logic_0;
        end if; 
    end process;


    multiplier_to_frontend_write_assign_proc : process(multiplier_to_frontend_full_n, ap_CS_fsm_state6, ap_predicate_op112_write_state6)
    begin
        if ((not(((ap_predicate_op112_write_state6 = ap_const_boolean_1) and (multiplier_to_frontend_full_n = ap_const_logic_0))) and (ap_predicate_op112_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            multiplier_to_frontend_write <= ap_const_logic_1;
        else 
            multiplier_to_frontend_write <= ap_const_logic_0;
        end if; 
    end process;


    rf_reg_stat_0_constprop_o_assign_proc : process(rf_reg_stat_0_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_0_constprop_o, grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_0_constprop_o <= grp_front_end_fu_698_rf_reg_stat_0_constprop_o;
        else 
            rf_reg_stat_0_constprop_o <= rf_reg_stat_0_constprop_i;
        end if; 
    end process;

    rf_reg_stat_0_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld;

    rf_reg_stat_10_constprop_o_assign_proc : process(rf_reg_stat_10_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_10_constprop_o, grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_10_constprop_o <= grp_front_end_fu_698_rf_reg_stat_10_constprop_o;
        else 
            rf_reg_stat_10_constprop_o <= rf_reg_stat_10_constprop_i;
        end if; 
    end process;

    rf_reg_stat_10_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld;

    rf_reg_stat_11_constprop_o_assign_proc : process(rf_reg_stat_11_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_11_constprop_o, grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_11_constprop_o <= grp_front_end_fu_698_rf_reg_stat_11_constprop_o;
        else 
            rf_reg_stat_11_constprop_o <= rf_reg_stat_11_constprop_i;
        end if; 
    end process;

    rf_reg_stat_11_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld;

    rf_reg_stat_12_constprop_o_assign_proc : process(rf_reg_stat_12_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_12_constprop_o, grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_12_constprop_o <= grp_front_end_fu_698_rf_reg_stat_12_constprop_o;
        else 
            rf_reg_stat_12_constprop_o <= rf_reg_stat_12_constprop_i;
        end if; 
    end process;

    rf_reg_stat_12_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld;

    rf_reg_stat_13_constprop_o_assign_proc : process(rf_reg_stat_13_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_13_constprop_o, grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_13_constprop_o <= grp_front_end_fu_698_rf_reg_stat_13_constprop_o;
        else 
            rf_reg_stat_13_constprop_o <= rf_reg_stat_13_constprop_i;
        end if; 
    end process;

    rf_reg_stat_13_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld;

    rf_reg_stat_14_constprop_o_assign_proc : process(rf_reg_stat_14_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_14_constprop_o, grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_14_constprop_o <= grp_front_end_fu_698_rf_reg_stat_14_constprop_o;
        else 
            rf_reg_stat_14_constprop_o <= rf_reg_stat_14_constprop_i;
        end if; 
    end process;

    rf_reg_stat_14_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld;

    rf_reg_stat_15_constprop_o_assign_proc : process(rf_reg_stat_15_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_15_constprop_o, grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_15_constprop_o <= grp_front_end_fu_698_rf_reg_stat_15_constprop_o;
        else 
            rf_reg_stat_15_constprop_o <= rf_reg_stat_15_constprop_i;
        end if; 
    end process;

    rf_reg_stat_15_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld;

    rf_reg_stat_16_constprop_o_assign_proc : process(rf_reg_stat_16_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_16_constprop_o, grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_16_constprop_o <= grp_front_end_fu_698_rf_reg_stat_16_constprop_o;
        else 
            rf_reg_stat_16_constprop_o <= rf_reg_stat_16_constprop_i;
        end if; 
    end process;

    rf_reg_stat_16_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld;

    rf_reg_stat_17_constprop_o_assign_proc : process(rf_reg_stat_17_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_17_constprop_o, grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_17_constprop_o <= grp_front_end_fu_698_rf_reg_stat_17_constprop_o;
        else 
            rf_reg_stat_17_constprop_o <= rf_reg_stat_17_constprop_i;
        end if; 
    end process;

    rf_reg_stat_17_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld;

    rf_reg_stat_18_constprop_o_assign_proc : process(rf_reg_stat_18_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_18_constprop_o, grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_18_constprop_o <= grp_front_end_fu_698_rf_reg_stat_18_constprop_o;
        else 
            rf_reg_stat_18_constprop_o <= rf_reg_stat_18_constprop_i;
        end if; 
    end process;

    rf_reg_stat_18_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld;

    rf_reg_stat_19_constprop_o_assign_proc : process(rf_reg_stat_19_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_19_constprop_o, grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_19_constprop_o <= grp_front_end_fu_698_rf_reg_stat_19_constprop_o;
        else 
            rf_reg_stat_19_constprop_o <= rf_reg_stat_19_constprop_i;
        end if; 
    end process;

    rf_reg_stat_19_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld;

    rf_reg_stat_1_constprop_o_assign_proc : process(rf_reg_stat_1_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_1_constprop_o, grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_1_constprop_o <= grp_front_end_fu_698_rf_reg_stat_1_constprop_o;
        else 
            rf_reg_stat_1_constprop_o <= rf_reg_stat_1_constprop_i;
        end if; 
    end process;

    rf_reg_stat_1_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld;

    rf_reg_stat_20_constprop_o_assign_proc : process(rf_reg_stat_20_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_20_constprop_o, grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_20_constprop_o <= grp_front_end_fu_698_rf_reg_stat_20_constprop_o;
        else 
            rf_reg_stat_20_constprop_o <= rf_reg_stat_20_constprop_i;
        end if; 
    end process;

    rf_reg_stat_20_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld;

    rf_reg_stat_21_constprop_o_assign_proc : process(rf_reg_stat_21_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_21_constprop_o, grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_21_constprop_o <= grp_front_end_fu_698_rf_reg_stat_21_constprop_o;
        else 
            rf_reg_stat_21_constprop_o <= rf_reg_stat_21_constprop_i;
        end if; 
    end process;

    rf_reg_stat_21_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld;

    rf_reg_stat_22_constprop_o_assign_proc : process(rf_reg_stat_22_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_22_constprop_o, grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_22_constprop_o <= grp_front_end_fu_698_rf_reg_stat_22_constprop_o;
        else 
            rf_reg_stat_22_constprop_o <= rf_reg_stat_22_constprop_i;
        end if; 
    end process;

    rf_reg_stat_22_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld;

    rf_reg_stat_23_constprop_o_assign_proc : process(rf_reg_stat_23_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_23_constprop_o, grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_23_constprop_o <= grp_front_end_fu_698_rf_reg_stat_23_constprop_o;
        else 
            rf_reg_stat_23_constprop_o <= rf_reg_stat_23_constprop_i;
        end if; 
    end process;

    rf_reg_stat_23_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld;

    rf_reg_stat_24_constprop_o_assign_proc : process(rf_reg_stat_24_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_24_constprop_o, grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_24_constprop_o <= grp_front_end_fu_698_rf_reg_stat_24_constprop_o;
        else 
            rf_reg_stat_24_constprop_o <= rf_reg_stat_24_constprop_i;
        end if; 
    end process;

    rf_reg_stat_24_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld;

    rf_reg_stat_25_constprop_o_assign_proc : process(rf_reg_stat_25_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_25_constprop_o, grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_25_constprop_o <= grp_front_end_fu_698_rf_reg_stat_25_constprop_o;
        else 
            rf_reg_stat_25_constprop_o <= rf_reg_stat_25_constprop_i;
        end if; 
    end process;

    rf_reg_stat_25_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld;

    rf_reg_stat_26_constprop_o_assign_proc : process(rf_reg_stat_26_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_26_constprop_o, grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_26_constprop_o <= grp_front_end_fu_698_rf_reg_stat_26_constprop_o;
        else 
            rf_reg_stat_26_constprop_o <= rf_reg_stat_26_constprop_i;
        end if; 
    end process;

    rf_reg_stat_26_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld;

    rf_reg_stat_27_constprop_o_assign_proc : process(rf_reg_stat_27_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_27_constprop_o, grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_27_constprop_o <= grp_front_end_fu_698_rf_reg_stat_27_constprop_o;
        else 
            rf_reg_stat_27_constprop_o <= rf_reg_stat_27_constprop_i;
        end if; 
    end process;

    rf_reg_stat_27_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld;

    rf_reg_stat_28_constprop_o_assign_proc : process(rf_reg_stat_28_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_28_constprop_o, grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_28_constprop_o <= grp_front_end_fu_698_rf_reg_stat_28_constprop_o;
        else 
            rf_reg_stat_28_constprop_o <= rf_reg_stat_28_constprop_i;
        end if; 
    end process;

    rf_reg_stat_28_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld;

    rf_reg_stat_29_constprop_o_assign_proc : process(rf_reg_stat_29_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_29_constprop_o, grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_29_constprop_o <= grp_front_end_fu_698_rf_reg_stat_29_constprop_o;
        else 
            rf_reg_stat_29_constprop_o <= rf_reg_stat_29_constprop_i;
        end if; 
    end process;

    rf_reg_stat_29_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld;

    rf_reg_stat_2_constprop_o_assign_proc : process(rf_reg_stat_2_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_2_constprop_o, grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_2_constprop_o <= grp_front_end_fu_698_rf_reg_stat_2_constprop_o;
        else 
            rf_reg_stat_2_constprop_o <= rf_reg_stat_2_constprop_i;
        end if; 
    end process;

    rf_reg_stat_2_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld;

    rf_reg_stat_30_constprop_o_assign_proc : process(rf_reg_stat_30_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_30_constprop_o, grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_30_constprop_o <= grp_front_end_fu_698_rf_reg_stat_30_constprop_o;
        else 
            rf_reg_stat_30_constprop_o <= rf_reg_stat_30_constprop_i;
        end if; 
    end process;

    rf_reg_stat_30_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld;

    rf_reg_stat_31_constprop_o_assign_proc : process(rf_reg_stat_31_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_31_constprop_o, grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_31_constprop_o <= grp_front_end_fu_698_rf_reg_stat_31_constprop_o;
        else 
            rf_reg_stat_31_constprop_o <= rf_reg_stat_31_constprop_i;
        end if; 
    end process;

    rf_reg_stat_31_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld;

    rf_reg_stat_3_constprop_o_assign_proc : process(rf_reg_stat_3_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_3_constprop_o, grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_3_constprop_o <= grp_front_end_fu_698_rf_reg_stat_3_constprop_o;
        else 
            rf_reg_stat_3_constprop_o <= rf_reg_stat_3_constprop_i;
        end if; 
    end process;

    rf_reg_stat_3_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld;

    rf_reg_stat_4_constprop_o_assign_proc : process(rf_reg_stat_4_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_4_constprop_o, grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_4_constprop_o <= grp_front_end_fu_698_rf_reg_stat_4_constprop_o;
        else 
            rf_reg_stat_4_constprop_o <= rf_reg_stat_4_constprop_i;
        end if; 
    end process;

    rf_reg_stat_4_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld;

    rf_reg_stat_5_constprop_o_assign_proc : process(rf_reg_stat_5_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_5_constprop_o, grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_5_constprop_o <= grp_front_end_fu_698_rf_reg_stat_5_constprop_o;
        else 
            rf_reg_stat_5_constprop_o <= rf_reg_stat_5_constprop_i;
        end if; 
    end process;

    rf_reg_stat_5_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld;

    rf_reg_stat_6_constprop_o_assign_proc : process(rf_reg_stat_6_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_6_constprop_o, grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_6_constprop_o <= grp_front_end_fu_698_rf_reg_stat_6_constprop_o;
        else 
            rf_reg_stat_6_constprop_o <= rf_reg_stat_6_constprop_i;
        end if; 
    end process;

    rf_reg_stat_6_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld;

    rf_reg_stat_7_constprop_o_assign_proc : process(rf_reg_stat_7_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_7_constprop_o, grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_7_constprop_o <= grp_front_end_fu_698_rf_reg_stat_7_constprop_o;
        else 
            rf_reg_stat_7_constprop_o <= rf_reg_stat_7_constprop_i;
        end if; 
    end process;

    rf_reg_stat_7_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld;

    rf_reg_stat_8_constprop_o_assign_proc : process(rf_reg_stat_8_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_8_constprop_o, grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_8_constprop_o <= grp_front_end_fu_698_rf_reg_stat_8_constprop_o;
        else 
            rf_reg_stat_8_constprop_o <= rf_reg_stat_8_constprop_i;
        end if; 
    end process;

    rf_reg_stat_8_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld;

    rf_reg_stat_9_constprop_o_assign_proc : process(rf_reg_stat_9_constprop_i, ap_CS_fsm_state2, grp_front_end_fu_698_rf_reg_stat_9_constprop_o, grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld)
    begin
        if (((grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rf_reg_stat_9_constprop_o <= grp_front_end_fu_698_rf_reg_stat_9_constprop_o;
        else 
            rf_reg_stat_9_constprop_o <= rf_reg_stat_9_constprop_i;
        end if; 
    end process;

    rf_reg_stat_9_constprop_o_ap_vld <= grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld;
    sub_ln58_fu_1030_p2 <= std_logic_vector(unsigned(tmp_r1_fu_1004_p4) - unsigned(tmp_r2_fu_1014_p4));
    tmp_3_nbreadreq_fu_501_p3 <= (0=>(front_end_to_multiplier_empty_n), others=>'-');
    tmp_nbreadreq_fu_480_p3 <= (0=>(front_end_to_adder_empty_n), others=>'-');
    tmp_r1_fu_1004_p4 <= front_end_to_adder_dout(127 downto 96);
    tmp_r2_fu_1014_p4 <= front_end_to_adder_dout(159 downto 128);
end behav;
