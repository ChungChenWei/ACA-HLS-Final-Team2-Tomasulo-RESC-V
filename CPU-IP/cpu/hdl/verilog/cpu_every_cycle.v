// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cpu_every_cycle (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        instruction_i,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        adder_to_front_end_dout,
        adder_to_front_end_empty_n,
        adder_to_front_end_read,
        adder_to_front_end_din,
        adder_to_front_end_full_n,
        adder_to_front_end_write,
        rf_reg_stat_0_constprop_i,
        rf_reg_stat_0_constprop_o,
        rf_reg_stat_0_constprop_o_ap_vld,
        rf_reg_stat_1_constprop_i,
        rf_reg_stat_1_constprop_o,
        rf_reg_stat_1_constprop_o_ap_vld,
        rf_reg_stat_2_constprop_i,
        rf_reg_stat_2_constprop_o,
        rf_reg_stat_2_constprop_o_ap_vld,
        rf_reg_stat_3_constprop_i,
        rf_reg_stat_3_constprop_o,
        rf_reg_stat_3_constprop_o_ap_vld,
        rf_reg_stat_4_constprop_i,
        rf_reg_stat_4_constprop_o,
        rf_reg_stat_4_constprop_o_ap_vld,
        rf_reg_stat_5_constprop_i,
        rf_reg_stat_5_constprop_o,
        rf_reg_stat_5_constprop_o_ap_vld,
        rf_reg_stat_6_constprop_i,
        rf_reg_stat_6_constprop_o,
        rf_reg_stat_6_constprop_o_ap_vld,
        rf_reg_stat_7_constprop_i,
        rf_reg_stat_7_constprop_o,
        rf_reg_stat_7_constprop_o_ap_vld,
        rf_reg_stat_8_constprop_i,
        rf_reg_stat_8_constprop_o,
        rf_reg_stat_8_constprop_o_ap_vld,
        rf_reg_stat_9_constprop_i,
        rf_reg_stat_9_constprop_o,
        rf_reg_stat_9_constprop_o_ap_vld,
        rf_reg_stat_10_constprop_i,
        rf_reg_stat_10_constprop_o,
        rf_reg_stat_10_constprop_o_ap_vld,
        rf_reg_stat_11_constprop_i,
        rf_reg_stat_11_constprop_o,
        rf_reg_stat_11_constprop_o_ap_vld,
        rf_reg_stat_12_constprop_i,
        rf_reg_stat_12_constprop_o,
        rf_reg_stat_12_constprop_o_ap_vld,
        rf_reg_stat_13_constprop_i,
        rf_reg_stat_13_constprop_o,
        rf_reg_stat_13_constprop_o_ap_vld,
        rf_reg_stat_14_constprop_i,
        rf_reg_stat_14_constprop_o,
        rf_reg_stat_14_constprop_o_ap_vld,
        rf_reg_stat_15_constprop_i,
        rf_reg_stat_15_constprop_o,
        rf_reg_stat_15_constprop_o_ap_vld,
        rf_reg_stat_16_constprop_i,
        rf_reg_stat_16_constprop_o,
        rf_reg_stat_16_constprop_o_ap_vld,
        rf_reg_stat_17_constprop_i,
        rf_reg_stat_17_constprop_o,
        rf_reg_stat_17_constprop_o_ap_vld,
        rf_reg_stat_18_constprop_i,
        rf_reg_stat_18_constprop_o,
        rf_reg_stat_18_constprop_o_ap_vld,
        rf_reg_stat_19_constprop_i,
        rf_reg_stat_19_constprop_o,
        rf_reg_stat_19_constprop_o_ap_vld,
        rf_reg_stat_20_constprop_i,
        rf_reg_stat_20_constprop_o,
        rf_reg_stat_20_constprop_o_ap_vld,
        rf_reg_stat_21_constprop_i,
        rf_reg_stat_21_constprop_o,
        rf_reg_stat_21_constprop_o_ap_vld,
        rf_reg_stat_22_constprop_i,
        rf_reg_stat_22_constprop_o,
        rf_reg_stat_22_constprop_o_ap_vld,
        rf_reg_stat_23_constprop_i,
        rf_reg_stat_23_constprop_o,
        rf_reg_stat_23_constprop_o_ap_vld,
        rf_reg_stat_24_constprop_i,
        rf_reg_stat_24_constprop_o,
        rf_reg_stat_24_constprop_o_ap_vld,
        rf_reg_stat_25_constprop_i,
        rf_reg_stat_25_constprop_o,
        rf_reg_stat_25_constprop_o_ap_vld,
        rf_reg_stat_26_constprop_i,
        rf_reg_stat_26_constprop_o,
        rf_reg_stat_26_constprop_o_ap_vld,
        rf_reg_stat_27_constprop_i,
        rf_reg_stat_27_constprop_o,
        rf_reg_stat_27_constprop_o_ap_vld,
        rf_reg_stat_28_constprop_i,
        rf_reg_stat_28_constprop_o,
        rf_reg_stat_28_constprop_o_ap_vld,
        rf_reg_stat_29_constprop_i,
        rf_reg_stat_29_constprop_o,
        rf_reg_stat_29_constprop_o_ap_vld,
        rf_reg_stat_30_constprop_i,
        rf_reg_stat_30_constprop_o,
        rf_reg_stat_30_constprop_o_ap_vld,
        rf_reg_stat_31_constprop_i,
        rf_reg_stat_31_constprop_o,
        rf_reg_stat_31_constprop_o_ap_vld,
        multiplier_to_frontend_dout,
        multiplier_to_frontend_empty_n,
        multiplier_to_frontend_read,
        multiplier_to_frontend_din,
        multiplier_to_frontend_full_n,
        multiplier_to_frontend_write,
        front_end_to_adder_dout,
        front_end_to_adder_empty_n,
        front_end_to_adder_read,
        front_end_to_adder_din,
        front_end_to_adder_full_n,
        front_end_to_adder_write,
        front_end_to_multiplier_dout,
        front_end_to_multiplier_empty_n,
        front_end_to_multiplier_read,
        front_end_to_multiplier_din,
        front_end_to_multiplier_full_n,
        front_end_to_multiplier_write,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] instruction_i;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
input  [31:0] p_read11;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] p_read14;
input  [31:0] p_read15;
input  [31:0] p_read16;
input  [31:0] p_read17;
input  [31:0] p_read18;
input  [31:0] p_read19;
input  [31:0] p_read20;
input  [31:0] p_read21;
input  [31:0] p_read22;
input  [31:0] p_read23;
input  [31:0] p_read24;
input  [31:0] p_read25;
input  [31:0] p_read26;
input  [31:0] p_read27;
input  [31:0] p_read28;
input  [31:0] p_read29;
input  [31:0] p_read30;
input  [31:0] p_read31;
input  [63:0] adder_to_front_end_dout;
input   adder_to_front_end_empty_n;
output   adder_to_front_end_read;
output  [63:0] adder_to_front_end_din;
input   adder_to_front_end_full_n;
output   adder_to_front_end_write;
input  [31:0] rf_reg_stat_0_constprop_i;
output  [31:0] rf_reg_stat_0_constprop_o;
output   rf_reg_stat_0_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_1_constprop_i;
output  [31:0] rf_reg_stat_1_constprop_o;
output   rf_reg_stat_1_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_2_constprop_i;
output  [31:0] rf_reg_stat_2_constprop_o;
output   rf_reg_stat_2_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_3_constprop_i;
output  [31:0] rf_reg_stat_3_constprop_o;
output   rf_reg_stat_3_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_4_constprop_i;
output  [31:0] rf_reg_stat_4_constprop_o;
output   rf_reg_stat_4_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_5_constprop_i;
output  [31:0] rf_reg_stat_5_constprop_o;
output   rf_reg_stat_5_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_6_constprop_i;
output  [31:0] rf_reg_stat_6_constprop_o;
output   rf_reg_stat_6_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_7_constprop_i;
output  [31:0] rf_reg_stat_7_constprop_o;
output   rf_reg_stat_7_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_8_constprop_i;
output  [31:0] rf_reg_stat_8_constprop_o;
output   rf_reg_stat_8_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_9_constprop_i;
output  [31:0] rf_reg_stat_9_constprop_o;
output   rf_reg_stat_9_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_10_constprop_i;
output  [31:0] rf_reg_stat_10_constprop_o;
output   rf_reg_stat_10_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_11_constprop_i;
output  [31:0] rf_reg_stat_11_constprop_o;
output   rf_reg_stat_11_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_12_constprop_i;
output  [31:0] rf_reg_stat_12_constprop_o;
output   rf_reg_stat_12_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_13_constprop_i;
output  [31:0] rf_reg_stat_13_constprop_o;
output   rf_reg_stat_13_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_14_constprop_i;
output  [31:0] rf_reg_stat_14_constprop_o;
output   rf_reg_stat_14_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_15_constprop_i;
output  [31:0] rf_reg_stat_15_constprop_o;
output   rf_reg_stat_15_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_16_constprop_i;
output  [31:0] rf_reg_stat_16_constprop_o;
output   rf_reg_stat_16_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_17_constprop_i;
output  [31:0] rf_reg_stat_17_constprop_o;
output   rf_reg_stat_17_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_18_constprop_i;
output  [31:0] rf_reg_stat_18_constprop_o;
output   rf_reg_stat_18_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_19_constprop_i;
output  [31:0] rf_reg_stat_19_constprop_o;
output   rf_reg_stat_19_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_20_constprop_i;
output  [31:0] rf_reg_stat_20_constprop_o;
output   rf_reg_stat_20_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_21_constprop_i;
output  [31:0] rf_reg_stat_21_constprop_o;
output   rf_reg_stat_21_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_22_constprop_i;
output  [31:0] rf_reg_stat_22_constprop_o;
output   rf_reg_stat_22_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_23_constprop_i;
output  [31:0] rf_reg_stat_23_constprop_o;
output   rf_reg_stat_23_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_24_constprop_i;
output  [31:0] rf_reg_stat_24_constprop_o;
output   rf_reg_stat_24_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_25_constprop_i;
output  [31:0] rf_reg_stat_25_constprop_o;
output   rf_reg_stat_25_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_26_constprop_i;
output  [31:0] rf_reg_stat_26_constprop_o;
output   rf_reg_stat_26_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_27_constprop_i;
output  [31:0] rf_reg_stat_27_constprop_o;
output   rf_reg_stat_27_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_28_constprop_i;
output  [31:0] rf_reg_stat_28_constprop_o;
output   rf_reg_stat_28_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_29_constprop_i;
output  [31:0] rf_reg_stat_29_constprop_o;
output   rf_reg_stat_29_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_30_constprop_i;
output  [31:0] rf_reg_stat_30_constprop_o;
output   rf_reg_stat_30_constprop_o_ap_vld;
input  [31:0] rf_reg_stat_31_constprop_i;
output  [31:0] rf_reg_stat_31_constprop_o;
output   rf_reg_stat_31_constprop_o_ap_vld;
input  [63:0] multiplier_to_frontend_dout;
input   multiplier_to_frontend_empty_n;
output   multiplier_to_frontend_read;
output  [63:0] multiplier_to_frontend_din;
input   multiplier_to_frontend_full_n;
output   multiplier_to_frontend_write;
input  [159:0] front_end_to_adder_dout;
input   front_end_to_adder_empty_n;
output   front_end_to_adder_read;
output  [159:0] front_end_to_adder_din;
input   front_end_to_adder_full_n;
output   front_end_to_adder_write;
input  [159:0] front_end_to_multiplier_dout;
input   front_end_to_multiplier_empty_n;
output   front_end_to_multiplier_read;
output  [159:0] front_end_to_multiplier_din;
input   front_end_to_multiplier_full_n;
output   front_end_to_multiplier_write;
output  [0:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
output  [31:0] ap_return_16;
output  [31:0] ap_return_17;
output  [31:0] ap_return_18;
output  [31:0] ap_return_19;
output  [31:0] ap_return_20;
output  [31:0] ap_return_21;
output  [31:0] ap_return_22;
output  [31:0] ap_return_23;
output  [31:0] ap_return_24;
output  [31:0] ap_return_25;
output  [31:0] ap_return_26;
output  [31:0] ap_return_27;
output  [31:0] ap_return_28;
output  [31:0] ap_return_29;
output  [31:0] ap_return_30;
output  [31:0] ap_return_31;
output  [31:0] ap_return_32;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg adder_to_front_end_read;
reg adder_to_front_end_write;
reg[31:0] rf_reg_stat_0_constprop_o;
reg[31:0] rf_reg_stat_1_constprop_o;
reg[31:0] rf_reg_stat_2_constprop_o;
reg[31:0] rf_reg_stat_3_constprop_o;
reg[31:0] rf_reg_stat_4_constprop_o;
reg[31:0] rf_reg_stat_5_constprop_o;
reg[31:0] rf_reg_stat_6_constprop_o;
reg[31:0] rf_reg_stat_7_constprop_o;
reg[31:0] rf_reg_stat_8_constprop_o;
reg[31:0] rf_reg_stat_9_constprop_o;
reg[31:0] rf_reg_stat_10_constprop_o;
reg[31:0] rf_reg_stat_11_constprop_o;
reg[31:0] rf_reg_stat_12_constprop_o;
reg[31:0] rf_reg_stat_13_constprop_o;
reg[31:0] rf_reg_stat_14_constprop_o;
reg[31:0] rf_reg_stat_15_constprop_o;
reg[31:0] rf_reg_stat_16_constprop_o;
reg[31:0] rf_reg_stat_17_constprop_o;
reg[31:0] rf_reg_stat_18_constprop_o;
reg[31:0] rf_reg_stat_19_constprop_o;
reg[31:0] rf_reg_stat_20_constprop_o;
reg[31:0] rf_reg_stat_21_constprop_o;
reg[31:0] rf_reg_stat_22_constprop_o;
reg[31:0] rf_reg_stat_23_constprop_o;
reg[31:0] rf_reg_stat_24_constprop_o;
reg[31:0] rf_reg_stat_25_constprop_o;
reg[31:0] rf_reg_stat_26_constprop_o;
reg[31:0] rf_reg_stat_27_constprop_o;
reg[31:0] rf_reg_stat_28_constprop_o;
reg[31:0] rf_reg_stat_29_constprop_o;
reg[31:0] rf_reg_stat_30_constprop_o;
reg[31:0] rf_reg_stat_31_constprop_o;
reg multiplier_to_frontend_read;
reg multiplier_to_frontend_write;
reg front_end_to_adder_read;
reg front_end_to_adder_write;
reg front_end_to_multiplier_read;
reg front_end_to_multiplier_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] adders_busy_0;
reg   [31:0] adders_result_src_0;
reg   [31:0] adders_result_value_0;
reg   [31:0] adders_counter;
reg   [31:0] multipliers_result_src_0;
reg   [31:0] multipliers_result_value_0;
reg   [31:0] multipliers_counter;
reg   [0:0] multipliers_busy_0;
reg    adder_to_front_end_o_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8;
wire   [0:0] icmp_ln69_fu_1071_p2;
reg    multiplier_to_frontend_o_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6;
wire   [0:0] icmp_ln137_fu_1189_p2;
reg    front_end_to_adder_i_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_nbreadreq_fu_480_p3;
reg    front_end_to_multiplier_i_blk_n;
wire   [0:0] tmp_3_nbreadreq_fu_501_p3;
wire   [0:0] grp_front_end_fu_698_ap_return_0;
wire   [31:0] grp_front_end_fu_698_ap_return_1;
wire   [31:0] grp_front_end_fu_698_ap_return_2;
wire   [31:0] grp_front_end_fu_698_ap_return_3;
wire   [31:0] grp_front_end_fu_698_ap_return_4;
wire   [31:0] grp_front_end_fu_698_ap_return_5;
wire   [31:0] grp_front_end_fu_698_ap_return_6;
wire   [31:0] grp_front_end_fu_698_ap_return_7;
wire   [31:0] grp_front_end_fu_698_ap_return_8;
wire   [31:0] grp_front_end_fu_698_ap_return_9;
wire   [31:0] grp_front_end_fu_698_ap_return_10;
wire   [31:0] grp_front_end_fu_698_ap_return_11;
wire   [31:0] grp_front_end_fu_698_ap_return_12;
wire   [31:0] grp_front_end_fu_698_ap_return_13;
wire   [31:0] grp_front_end_fu_698_ap_return_14;
wire   [31:0] grp_front_end_fu_698_ap_return_15;
wire   [31:0] grp_front_end_fu_698_ap_return_16;
wire   [31:0] grp_front_end_fu_698_ap_return_17;
wire   [31:0] grp_front_end_fu_698_ap_return_18;
wire   [31:0] grp_front_end_fu_698_ap_return_19;
wire   [31:0] grp_front_end_fu_698_ap_return_20;
wire   [31:0] grp_front_end_fu_698_ap_return_21;
wire   [31:0] grp_front_end_fu_698_ap_return_22;
wire   [31:0] grp_front_end_fu_698_ap_return_23;
wire   [31:0] grp_front_end_fu_698_ap_return_24;
wire   [31:0] grp_front_end_fu_698_ap_return_25;
wire   [31:0] grp_front_end_fu_698_ap_return_26;
wire   [31:0] grp_front_end_fu_698_ap_return_27;
wire   [31:0] grp_front_end_fu_698_ap_return_28;
wire   [31:0] grp_front_end_fu_698_ap_return_29;
wire   [31:0] grp_front_end_fu_698_ap_return_30;
wire   [31:0] grp_front_end_fu_698_ap_return_31;
wire   [31:0] grp_front_end_fu_698_ap_return_32;
reg   [0:0] call_ret1_reg_1421_0;
reg   [31:0] call_ret1_reg_1421_1;
reg   [31:0] call_ret1_reg_1421_2;
reg   [31:0] call_ret1_reg_1421_3;
reg   [31:0] call_ret1_reg_1421_4;
reg   [31:0] call_ret1_reg_1421_5;
reg   [31:0] call_ret1_reg_1421_6;
reg   [31:0] call_ret1_reg_1421_7;
reg   [31:0] call_ret1_reg_1421_8;
reg   [31:0] call_ret1_reg_1421_9;
reg   [31:0] call_ret1_reg_1421_10;
reg   [31:0] call_ret1_reg_1421_11;
reg   [31:0] call_ret1_reg_1421_12;
reg   [31:0] call_ret1_reg_1421_13;
reg   [31:0] call_ret1_reg_1421_14;
reg   [31:0] call_ret1_reg_1421_15;
reg   [31:0] call_ret1_reg_1421_16;
reg   [31:0] call_ret1_reg_1421_17;
reg   [31:0] call_ret1_reg_1421_18;
reg   [31:0] call_ret1_reg_1421_19;
reg   [31:0] call_ret1_reg_1421_20;
reg   [31:0] call_ret1_reg_1421_21;
reg   [31:0] call_ret1_reg_1421_22;
reg   [31:0] call_ret1_reg_1421_23;
reg   [31:0] call_ret1_reg_1421_24;
reg   [31:0] call_ret1_reg_1421_25;
reg   [31:0] call_ret1_reg_1421_26;
reg   [31:0] call_ret1_reg_1421_27;
reg   [31:0] call_ret1_reg_1421_28;
reg   [31:0] call_ret1_reg_1421_29;
reg   [31:0] call_ret1_reg_1421_30;
reg   [31:0] call_ret1_reg_1421_31;
reg   [31:0] call_ret1_reg_1421_32;
wire    ap_CS_fsm_state2;
reg  signed [31:0] tmp_r1_1_reg_1443;
reg  signed [31:0] tmp_r2_1_reg_1448;
wire    grp_front_end_fu_698_ap_start;
wire    grp_front_end_fu_698_ap_done;
wire    grp_front_end_fu_698_ap_idle;
wire    grp_front_end_fu_698_ap_ready;
wire    grp_front_end_fu_698_adder_to_front_end_read;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_0_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_1_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_2_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_3_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_4_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_5_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_6_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_7_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_8_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_9_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_10_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_11_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_12_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_13_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_14_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_15_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_16_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_17_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_18_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_19_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_20_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_21_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_22_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_23_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_24_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_25_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_26_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_27_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_28_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_29_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_30_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld;
wire   [31:0] grp_front_end_fu_698_rf_reg_stat_31_constprop_o;
wire    grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld;
wire    grp_front_end_fu_698_multiplier_to_frontend_read;
wire   [159:0] grp_front_end_fu_698_front_end_to_adder_din;
wire    grp_front_end_fu_698_front_end_to_adder_write;
wire   [159:0] grp_front_end_fu_698_front_end_to_multiplier_din;
wire    grp_front_end_fu_698_front_end_to_multiplier_write;
reg   [0:0] adders_busy_0_flag_0_reg_522;
reg    ap_block_state3;
wire   [31:0] input_op_fu_994_p4;
reg   [0:0] adders_busy_0_loc_0_reg_541;
reg   [0:0] ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6;
reg    ap_predicate_op74_write_state4;
reg    ap_block_state4;
reg   [0:0] ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6;
reg   [0:0] ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6;
reg   [31:0] ap_phi_mux_adders_counter_new_0_phi_fu_603_p6;
wire   [31:0] add_ln68_fu_1064_p2;
reg   [0:0] multipliers_busy_0_flag_0_reg_613;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln124_fu_1156_p2;
reg   [0:0] multipliers_busy_0_loc_0_reg_629;
reg   [0:0] ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6;
reg    ap_predicate_op112_write_state6;
reg    ap_block_state6;
reg   [0:0] ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6;
reg   [0:0] ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6;
reg   [31:0] ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6;
wire   [31:0] add_ln136_fu_1182_p2;
reg    grp_front_end_fu_698_ap_start_reg;
wire   [31:0] sub_ln58_fu_1030_p2;
wire   [31:0] add_ln54_fu_1042_p2;
wire   [31:0] mul_ln126_fu_1168_p2;
wire   [31:0] tmp_r1_fu_1004_p4;
wire   [31:0] tmp_r2_fu_1014_p4;
wire   [31:0] input_op_1_fu_1120_p4;
reg   [5:0] ap_NS_fsm;
reg    ap_condition_613;
reg    ap_condition_606;
reg    ap_condition_596;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 adders_busy_0 = 1'd0;
#0 adders_result_src_0 = 32'd0;
#0 adders_result_value_0 = 32'd0;
#0 adders_counter = 32'd0;
#0 multipliers_result_src_0 = 32'd0;
#0 multipliers_result_value_0 = 32'd0;
#0 multipliers_counter = 32'd0;
#0 multipliers_busy_0 = 1'd0;
#0 grp_front_end_fu_698_ap_start_reg = 1'b0;
end

cpu_front_end grp_front_end_fu_698(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_front_end_fu_698_ap_start),
    .ap_done(grp_front_end_fu_698_ap_done),
    .ap_idle(grp_front_end_fu_698_ap_idle),
    .ap_ready(grp_front_end_fu_698_ap_ready),
    .instruction_i(instruction_i),
    .p_read(p_read),
    .rf_value_read(p_read),
    .p_read1(p_read1),
    .rf_value32_read(p_read1),
    .p_read2(p_read2),
    .rf_value33_read(p_read2),
    .p_read3(p_read3),
    .rf_value34_read(p_read3),
    .p_read4(p_read4),
    .rf_value35_read(p_read4),
    .p_read5(p_read5),
    .rf_value36_read(p_read5),
    .p_read6(p_read6),
    .rf_value37_read(p_read6),
    .p_read7(p_read7),
    .rf_value38_read(p_read7),
    .p_read8(p_read8),
    .rf_value39_read(p_read8),
    .p_read9(p_read9),
    .rf_value40_read(p_read9),
    .p_read10(p_read10),
    .rf_value41_read(p_read10),
    .p_read11(p_read11),
    .rf_value42_read(p_read11),
    .p_read12(p_read12),
    .rf_value43_read(p_read12),
    .p_read13(p_read13),
    .rf_value44_read(p_read13),
    .p_read14(p_read14),
    .rf_value45_read(p_read14),
    .p_read15(p_read15),
    .rf_value46_read(p_read15),
    .p_read16(p_read16),
    .rf_value47_read(p_read16),
    .p_read17(p_read17),
    .rf_value48_read(p_read17),
    .p_read18(p_read18),
    .rf_value49_read(p_read18),
    .p_read19(p_read19),
    .rf_value50_read(p_read19),
    .p_read20(p_read20),
    .rf_value51_read(p_read20),
    .p_read21(p_read21),
    .rf_value52_read(p_read21),
    .p_read22(p_read22),
    .rf_value53_read(p_read22),
    .p_read23(p_read23),
    .rf_value54_read(p_read23),
    .p_read24(p_read24),
    .rf_value55_read(p_read24),
    .p_read25(p_read25),
    .rf_value56_read(p_read25),
    .p_read26(p_read26),
    .rf_value57_read(p_read26),
    .p_read27(p_read27),
    .rf_value58_read(p_read27),
    .p_read28(p_read28),
    .rf_value59_read(p_read28),
    .p_read29(p_read29),
    .rf_value60_read(p_read29),
    .p_read30(p_read30),
    .rf_value61_read(p_read30),
    .p_read31(p_read31),
    .rf_value62_read(p_read31),
    .adder_to_front_end_dout(adder_to_front_end_dout),
    .adder_to_front_end_empty_n(adder_to_front_end_empty_n),
    .adder_to_front_end_read(grp_front_end_fu_698_adder_to_front_end_read),
    .rf_reg_stat_0_constprop_i(rf_reg_stat_0_constprop_i),
    .rf_reg_stat_0_constprop_o(grp_front_end_fu_698_rf_reg_stat_0_constprop_o),
    .rf_reg_stat_0_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld),
    .rf_reg_stat_1_constprop_i(rf_reg_stat_1_constprop_i),
    .rf_reg_stat_1_constprop_o(grp_front_end_fu_698_rf_reg_stat_1_constprop_o),
    .rf_reg_stat_1_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld),
    .rf_reg_stat_2_constprop_i(rf_reg_stat_2_constprop_i),
    .rf_reg_stat_2_constprop_o(grp_front_end_fu_698_rf_reg_stat_2_constprop_o),
    .rf_reg_stat_2_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld),
    .rf_reg_stat_3_constprop_i(rf_reg_stat_3_constprop_i),
    .rf_reg_stat_3_constprop_o(grp_front_end_fu_698_rf_reg_stat_3_constprop_o),
    .rf_reg_stat_3_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld),
    .rf_reg_stat_4_constprop_i(rf_reg_stat_4_constprop_i),
    .rf_reg_stat_4_constprop_o(grp_front_end_fu_698_rf_reg_stat_4_constprop_o),
    .rf_reg_stat_4_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld),
    .rf_reg_stat_5_constprop_i(rf_reg_stat_5_constprop_i),
    .rf_reg_stat_5_constprop_o(grp_front_end_fu_698_rf_reg_stat_5_constprop_o),
    .rf_reg_stat_5_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld),
    .rf_reg_stat_6_constprop_i(rf_reg_stat_6_constprop_i),
    .rf_reg_stat_6_constprop_o(grp_front_end_fu_698_rf_reg_stat_6_constprop_o),
    .rf_reg_stat_6_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld),
    .rf_reg_stat_7_constprop_i(rf_reg_stat_7_constprop_i),
    .rf_reg_stat_7_constprop_o(grp_front_end_fu_698_rf_reg_stat_7_constprop_o),
    .rf_reg_stat_7_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld),
    .rf_reg_stat_8_constprop_i(rf_reg_stat_8_constprop_i),
    .rf_reg_stat_8_constprop_o(grp_front_end_fu_698_rf_reg_stat_8_constprop_o),
    .rf_reg_stat_8_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld),
    .rf_reg_stat_9_constprop_i(rf_reg_stat_9_constprop_i),
    .rf_reg_stat_9_constprop_o(grp_front_end_fu_698_rf_reg_stat_9_constprop_o),
    .rf_reg_stat_9_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld),
    .rf_reg_stat_10_constprop_i(rf_reg_stat_10_constprop_i),
    .rf_reg_stat_10_constprop_o(grp_front_end_fu_698_rf_reg_stat_10_constprop_o),
    .rf_reg_stat_10_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld),
    .rf_reg_stat_11_constprop_i(rf_reg_stat_11_constprop_i),
    .rf_reg_stat_11_constprop_o(grp_front_end_fu_698_rf_reg_stat_11_constprop_o),
    .rf_reg_stat_11_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld),
    .rf_reg_stat_12_constprop_i(rf_reg_stat_12_constprop_i),
    .rf_reg_stat_12_constprop_o(grp_front_end_fu_698_rf_reg_stat_12_constprop_o),
    .rf_reg_stat_12_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld),
    .rf_reg_stat_13_constprop_i(rf_reg_stat_13_constprop_i),
    .rf_reg_stat_13_constprop_o(grp_front_end_fu_698_rf_reg_stat_13_constprop_o),
    .rf_reg_stat_13_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld),
    .rf_reg_stat_14_constprop_i(rf_reg_stat_14_constprop_i),
    .rf_reg_stat_14_constprop_o(grp_front_end_fu_698_rf_reg_stat_14_constprop_o),
    .rf_reg_stat_14_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld),
    .rf_reg_stat_15_constprop_i(rf_reg_stat_15_constprop_i),
    .rf_reg_stat_15_constprop_o(grp_front_end_fu_698_rf_reg_stat_15_constprop_o),
    .rf_reg_stat_15_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld),
    .rf_reg_stat_16_constprop_i(rf_reg_stat_16_constprop_i),
    .rf_reg_stat_16_constprop_o(grp_front_end_fu_698_rf_reg_stat_16_constprop_o),
    .rf_reg_stat_16_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld),
    .rf_reg_stat_17_constprop_i(rf_reg_stat_17_constprop_i),
    .rf_reg_stat_17_constprop_o(grp_front_end_fu_698_rf_reg_stat_17_constprop_o),
    .rf_reg_stat_17_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld),
    .rf_reg_stat_18_constprop_i(rf_reg_stat_18_constprop_i),
    .rf_reg_stat_18_constprop_o(grp_front_end_fu_698_rf_reg_stat_18_constprop_o),
    .rf_reg_stat_18_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld),
    .rf_reg_stat_19_constprop_i(rf_reg_stat_19_constprop_i),
    .rf_reg_stat_19_constprop_o(grp_front_end_fu_698_rf_reg_stat_19_constprop_o),
    .rf_reg_stat_19_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld),
    .rf_reg_stat_20_constprop_i(rf_reg_stat_20_constprop_i),
    .rf_reg_stat_20_constprop_o(grp_front_end_fu_698_rf_reg_stat_20_constprop_o),
    .rf_reg_stat_20_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld),
    .rf_reg_stat_21_constprop_i(rf_reg_stat_21_constprop_i),
    .rf_reg_stat_21_constprop_o(grp_front_end_fu_698_rf_reg_stat_21_constprop_o),
    .rf_reg_stat_21_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld),
    .rf_reg_stat_22_constprop_i(rf_reg_stat_22_constprop_i),
    .rf_reg_stat_22_constprop_o(grp_front_end_fu_698_rf_reg_stat_22_constprop_o),
    .rf_reg_stat_22_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld),
    .rf_reg_stat_23_constprop_i(rf_reg_stat_23_constprop_i),
    .rf_reg_stat_23_constprop_o(grp_front_end_fu_698_rf_reg_stat_23_constprop_o),
    .rf_reg_stat_23_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld),
    .rf_reg_stat_24_constprop_i(rf_reg_stat_24_constprop_i),
    .rf_reg_stat_24_constprop_o(grp_front_end_fu_698_rf_reg_stat_24_constprop_o),
    .rf_reg_stat_24_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld),
    .rf_reg_stat_25_constprop_i(rf_reg_stat_25_constprop_i),
    .rf_reg_stat_25_constprop_o(grp_front_end_fu_698_rf_reg_stat_25_constprop_o),
    .rf_reg_stat_25_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld),
    .rf_reg_stat_26_constprop_i(rf_reg_stat_26_constprop_i),
    .rf_reg_stat_26_constprop_o(grp_front_end_fu_698_rf_reg_stat_26_constprop_o),
    .rf_reg_stat_26_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld),
    .rf_reg_stat_27_constprop_i(rf_reg_stat_27_constprop_i),
    .rf_reg_stat_27_constprop_o(grp_front_end_fu_698_rf_reg_stat_27_constprop_o),
    .rf_reg_stat_27_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld),
    .rf_reg_stat_28_constprop_i(rf_reg_stat_28_constprop_i),
    .rf_reg_stat_28_constprop_o(grp_front_end_fu_698_rf_reg_stat_28_constprop_o),
    .rf_reg_stat_28_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld),
    .rf_reg_stat_29_constprop_i(rf_reg_stat_29_constprop_i),
    .rf_reg_stat_29_constprop_o(grp_front_end_fu_698_rf_reg_stat_29_constprop_o),
    .rf_reg_stat_29_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld),
    .rf_reg_stat_30_constprop_i(rf_reg_stat_30_constprop_i),
    .rf_reg_stat_30_constprop_o(grp_front_end_fu_698_rf_reg_stat_30_constprop_o),
    .rf_reg_stat_30_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld),
    .rf_reg_stat_31_constprop_i(rf_reg_stat_31_constprop_i),
    .rf_reg_stat_31_constprop_o(grp_front_end_fu_698_rf_reg_stat_31_constprop_o),
    .rf_reg_stat_31_constprop_o_ap_vld(grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld),
    .multiplier_to_frontend_dout(multiplier_to_frontend_dout),
    .multiplier_to_frontend_empty_n(multiplier_to_frontend_empty_n),
    .multiplier_to_frontend_read(grp_front_end_fu_698_multiplier_to_frontend_read),
    .front_end_to_adder_din(grp_front_end_fu_698_front_end_to_adder_din),
    .front_end_to_adder_full_n(front_end_to_adder_full_n),
    .front_end_to_adder_write(grp_front_end_fu_698_front_end_to_adder_write),
    .front_end_to_multiplier_din(grp_front_end_fu_698_front_end_to_multiplier_din),
    .front_end_to_multiplier_full_n(front_end_to_multiplier_full_n),
    .front_end_to_multiplier_write(grp_front_end_fu_698_front_end_to_multiplier_write),
    .ap_return_0(grp_front_end_fu_698_ap_return_0),
    .ap_return_1(grp_front_end_fu_698_ap_return_1),
    .ap_return_2(grp_front_end_fu_698_ap_return_2),
    .ap_return_3(grp_front_end_fu_698_ap_return_3),
    .ap_return_4(grp_front_end_fu_698_ap_return_4),
    .ap_return_5(grp_front_end_fu_698_ap_return_5),
    .ap_return_6(grp_front_end_fu_698_ap_return_6),
    .ap_return_7(grp_front_end_fu_698_ap_return_7),
    .ap_return_8(grp_front_end_fu_698_ap_return_8),
    .ap_return_9(grp_front_end_fu_698_ap_return_9),
    .ap_return_10(grp_front_end_fu_698_ap_return_10),
    .ap_return_11(grp_front_end_fu_698_ap_return_11),
    .ap_return_12(grp_front_end_fu_698_ap_return_12),
    .ap_return_13(grp_front_end_fu_698_ap_return_13),
    .ap_return_14(grp_front_end_fu_698_ap_return_14),
    .ap_return_15(grp_front_end_fu_698_ap_return_15),
    .ap_return_16(grp_front_end_fu_698_ap_return_16),
    .ap_return_17(grp_front_end_fu_698_ap_return_17),
    .ap_return_18(grp_front_end_fu_698_ap_return_18),
    .ap_return_19(grp_front_end_fu_698_ap_return_19),
    .ap_return_20(grp_front_end_fu_698_ap_return_20),
    .ap_return_21(grp_front_end_fu_698_ap_return_21),
    .ap_return_22(grp_front_end_fu_698_ap_return_22),
    .ap_return_23(grp_front_end_fu_698_ap_return_23),
    .ap_return_24(grp_front_end_fu_698_ap_return_24),
    .ap_return_25(grp_front_end_fu_698_ap_return_25),
    .ap_return_26(grp_front_end_fu_698_ap_return_26),
    .ap_return_27(grp_front_end_fu_698_ap_return_27),
    .ap_return_28(grp_front_end_fu_698_ap_return_28),
    .ap_return_29(grp_front_end_fu_698_ap_return_29),
    .ap_return_30(grp_front_end_fu_698_ap_return_30),
    .ap_return_31(grp_front_end_fu_698_ap_return_31),
    .ap_return_32(grp_front_end_fu_698_ap_return_32)
);

cpu_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U367(
    .din0(tmp_r1_1_reg_1443),
    .din1(tmp_r2_1_reg_1448),
    .dout(mul_ln126_fu_1168_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_front_end_fu_698_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_front_end_fu_698_ap_start_reg <= 1'b1;
        end else if ((grp_front_end_fu_698_ap_ready == 1'b1)) begin
            grp_front_end_fu_698_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        adders_busy_0_flag_0_reg_522 <= 1'd0;
    end else if (((~(input_op_fu_994_p4 == 32'd3) & ~(input_op_fu_994_p4 == 32'd2) & ~(input_op_fu_994_p4 == 32'd1) & ~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (input_op_fu_994_p4 == 32'd3) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (((input_op_fu_994_p4 == 32'd2) & (tmp_nbreadreq_fu_480_p3 == 1'd1)) | ((input_op_fu_994_p4 == 32'd1) & (tmp_nbreadreq_fu_480_p3 == 1'd1)))))) begin
        adders_busy_0_flag_0_reg_522 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        adders_busy_0_loc_0_reg_541 <= adders_busy_0;
    end else if (((~(input_op_fu_994_p4 == 32'd3) & ~(input_op_fu_994_p4 == 32'd2) & ~(input_op_fu_994_p4 == 32'd1) & ~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (input_op_fu_994_p4 == 32'd3) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | (~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (((input_op_fu_994_p4 == 32'd2) & (tmp_nbreadreq_fu_480_p3 == 1'd1)) | ((input_op_fu_994_p4 == 32'd1) & (tmp_nbreadreq_fu_480_p3 == 1'd1)))))) begin
        adders_busy_0_loc_0_reg_541 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_596)) begin
        if ((1'b1 == ap_condition_606)) begin
            adders_result_value_0 <= 32'd0;
        end else if ((1'b1 == ap_condition_613)) begin
            adders_result_value_0 <= add_ln54_fu_1042_p2;
        end else if (((input_op_fu_994_p4 == 32'd3) & (tmp_nbreadreq_fu_480_p3 == 1'd1))) begin
            adders_result_value_0 <= sub_ln58_fu_1030_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (tmp_3_nbreadreq_fu_501_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        multipliers_busy_0_flag_0_reg_613 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (icmp_ln124_fu_1156_p2 == 1'd0) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        multipliers_busy_0_flag_0_reg_613 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (tmp_3_nbreadreq_fu_501_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        multipliers_busy_0_loc_0_reg_629 <= multipliers_busy_0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (icmp_ln124_fu_1156_p2 == 1'd0) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        multipliers_busy_0_loc_0_reg_629 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (icmp_ln124_fu_1156_p2 == 1'd0) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        multipliers_result_value_0 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        multipliers_result_value_0 <= mul_ln126_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        adders_busy_0 <= ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        adders_counter <= ap_phi_mux_adders_counter_new_0_phi_fu_603_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        adders_result_src_0 <= {{front_end_to_adder_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        call_ret1_reg_1421_0 <= grp_front_end_fu_698_ap_return_0;
        call_ret1_reg_1421_1 <= grp_front_end_fu_698_ap_return_1;
        call_ret1_reg_1421_10 <= grp_front_end_fu_698_ap_return_10;
        call_ret1_reg_1421_11 <= grp_front_end_fu_698_ap_return_11;
        call_ret1_reg_1421_12 <= grp_front_end_fu_698_ap_return_12;
        call_ret1_reg_1421_13 <= grp_front_end_fu_698_ap_return_13;
        call_ret1_reg_1421_14 <= grp_front_end_fu_698_ap_return_14;
        call_ret1_reg_1421_15 <= grp_front_end_fu_698_ap_return_15;
        call_ret1_reg_1421_16 <= grp_front_end_fu_698_ap_return_16;
        call_ret1_reg_1421_17 <= grp_front_end_fu_698_ap_return_17;
        call_ret1_reg_1421_18 <= grp_front_end_fu_698_ap_return_18;
        call_ret1_reg_1421_19 <= grp_front_end_fu_698_ap_return_19;
        call_ret1_reg_1421_2 <= grp_front_end_fu_698_ap_return_2;
        call_ret1_reg_1421_20 <= grp_front_end_fu_698_ap_return_20;
        call_ret1_reg_1421_21 <= grp_front_end_fu_698_ap_return_21;
        call_ret1_reg_1421_22 <= grp_front_end_fu_698_ap_return_22;
        call_ret1_reg_1421_23 <= grp_front_end_fu_698_ap_return_23;
        call_ret1_reg_1421_24 <= grp_front_end_fu_698_ap_return_24;
        call_ret1_reg_1421_25 <= grp_front_end_fu_698_ap_return_25;
        call_ret1_reg_1421_26 <= grp_front_end_fu_698_ap_return_26;
        call_ret1_reg_1421_27 <= grp_front_end_fu_698_ap_return_27;
        call_ret1_reg_1421_28 <= grp_front_end_fu_698_ap_return_28;
        call_ret1_reg_1421_29 <= grp_front_end_fu_698_ap_return_29;
        call_ret1_reg_1421_3 <= grp_front_end_fu_698_ap_return_3;
        call_ret1_reg_1421_30 <= grp_front_end_fu_698_ap_return_30;
        call_ret1_reg_1421_31 <= grp_front_end_fu_698_ap_return_31;
        call_ret1_reg_1421_32 <= grp_front_end_fu_698_ap_return_32;
        call_ret1_reg_1421_4 <= grp_front_end_fu_698_ap_return_4;
        call_ret1_reg_1421_5 <= grp_front_end_fu_698_ap_return_5;
        call_ret1_reg_1421_6 <= grp_front_end_fu_698_ap_return_6;
        call_ret1_reg_1421_7 <= grp_front_end_fu_698_ap_return_7;
        call_ret1_reg_1421_8 <= grp_front_end_fu_698_ap_return_8;
        call_ret1_reg_1421_9 <= grp_front_end_fu_698_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        multipliers_busy_0 <= ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        multipliers_counter <= ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        multipliers_result_src_0 <= {{front_end_to_multiplier_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_r1_1_reg_1443 <= {{front_end_to_multiplier_dout[127:96]}};
        tmp_r2_1_reg_1448 <= {{front_end_to_multiplier_dout[159:128]}};
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_1071_p2 == 1'd1) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4))) begin
        adder_to_front_end_o_blk_n = adder_to_front_end_full_n;
    end else begin
        adder_to_front_end_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        adder_to_front_end_read = grp_front_end_fu_698_adder_to_front_end_read;
    end else begin
        adder_to_front_end_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (ap_predicate_op74_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        adder_to_front_end_write = 1'b1;
    end else begin
        adder_to_front_end_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln69_fu_1071_p2 == 1'd0) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4)))) begin
        ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 = adders_busy_0_flag_0_reg_522;
    end else if (((icmp_ln69_fu_1071_p2 == 1'd1) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 = 1'd1;
    end else begin
        ap_phi_mux_adders_busy_0_flag_1_phi_fu_561_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln69_fu_1071_p2 == 1'd0) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4)))) begin
        ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 = 1'd1;
    end else if (((icmp_ln69_fu_1071_p2 == 1'd1) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 = 1'd0;
    end else begin
        ap_phi_mux_adders_busy_0_new_1_phi_fu_575_p6 = 'bx;
    end
end

always @ (*) begin
    if (((ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 = 1'd0;
    end else if ((((icmp_ln69_fu_1071_p2 == 1'd0) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln69_fu_1071_p2 == 1'd1) & (1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4)))) begin
        ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 = 1'd1;
    end else begin
        ap_phi_mux_adders_counter_flag_0_phi_fu_589_p6 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == adders_busy_0_loc_0_reg_541) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((icmp_ln69_fu_1071_p2 == 1'd0)) begin
            ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 = add_ln68_fu_1064_p2;
        end else if ((icmp_ln69_fu_1071_p2 == 1'd1)) begin
            ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 = 32'd0;
        end else begin
            ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_adders_counter_new_0_phi_fu_603_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln137_fu_1189_p2 == 1'd0) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 = multipliers_busy_0_flag_0_reg_613;
    end else if (((icmp_ln137_fu_1189_p2 == 1'd1) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 = 1'd1;
    end else begin
        ap_phi_mux_multipliers_busy_0_flag_1_phi_fu_646_p6 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln137_fu_1189_p2 == 1'd0) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 = 1'd1;
    end else if (((icmp_ln137_fu_1189_p2 == 1'd1) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 = 1'd0;
    end else begin
        ap_phi_mux_multipliers_busy_0_new_1_phi_fu_660_p6 = 'bx;
    end
end

always @ (*) begin
    if (((ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 = 1'd0;
    end else if ((((icmp_ln137_fu_1189_p2 == 1'd0) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln137_fu_1189_p2 == 1'd1) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 = 1'd1;
    end else begin
        ap_phi_mux_multipliers_counter_flag_0_phi_fu_674_p6 = 'bx;
    end
end

always @ (*) begin
    if (((multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((icmp_ln137_fu_1189_p2 == 1'd0)) begin
            ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 = add_ln136_fu_1182_p2;
        end else if ((icmp_ln137_fu_1189_p2 == 1'd1)) begin
            ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 = 32'd0;
        end else begin
            ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_multipliers_counter_new_0_phi_fu_688_p6 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        front_end_to_adder_i_blk_n = front_end_to_adder_empty_n;
    end else begin
        front_end_to_adder_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (tmp_nbreadreq_fu_480_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        front_end_to_adder_read = 1'b1;
    end else begin
        front_end_to_adder_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        front_end_to_adder_write = grp_front_end_fu_698_front_end_to_adder_write;
    end else begin
        front_end_to_adder_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        front_end_to_multiplier_i_blk_n = front_end_to_multiplier_empty_n;
    end else begin
        front_end_to_multiplier_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        front_end_to_multiplier_read = 1'b1;
    end else begin
        front_end_to_multiplier_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        front_end_to_multiplier_write = grp_front_end_fu_698_front_end_to_multiplier_write;
    end else begin
        front_end_to_multiplier_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln137_fu_1189_p2 == 1'd1) & (multipliers_busy_0_loc_0_reg_629 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        multiplier_to_frontend_o_blk_n = multiplier_to_frontend_full_n;
    end else begin
        multiplier_to_frontend_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        multiplier_to_frontend_read = grp_front_end_fu_698_multiplier_to_frontend_read;
    end else begin
        multiplier_to_frontend_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (ap_predicate_op112_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        multiplier_to_frontend_write = 1'b1;
    end else begin
        multiplier_to_frontend_write = 1'b0;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_0_constprop_o = grp_front_end_fu_698_rf_reg_stat_0_constprop_o;
    end else begin
        rf_reg_stat_0_constprop_o = rf_reg_stat_0_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_10_constprop_o = grp_front_end_fu_698_rf_reg_stat_10_constprop_o;
    end else begin
        rf_reg_stat_10_constprop_o = rf_reg_stat_10_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_11_constprop_o = grp_front_end_fu_698_rf_reg_stat_11_constprop_o;
    end else begin
        rf_reg_stat_11_constprop_o = rf_reg_stat_11_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_12_constprop_o = grp_front_end_fu_698_rf_reg_stat_12_constprop_o;
    end else begin
        rf_reg_stat_12_constprop_o = rf_reg_stat_12_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_13_constprop_o = grp_front_end_fu_698_rf_reg_stat_13_constprop_o;
    end else begin
        rf_reg_stat_13_constprop_o = rf_reg_stat_13_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_14_constprop_o = grp_front_end_fu_698_rf_reg_stat_14_constprop_o;
    end else begin
        rf_reg_stat_14_constprop_o = rf_reg_stat_14_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_15_constprop_o = grp_front_end_fu_698_rf_reg_stat_15_constprop_o;
    end else begin
        rf_reg_stat_15_constprop_o = rf_reg_stat_15_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_16_constprop_o = grp_front_end_fu_698_rf_reg_stat_16_constprop_o;
    end else begin
        rf_reg_stat_16_constprop_o = rf_reg_stat_16_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_17_constprop_o = grp_front_end_fu_698_rf_reg_stat_17_constprop_o;
    end else begin
        rf_reg_stat_17_constprop_o = rf_reg_stat_17_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_18_constprop_o = grp_front_end_fu_698_rf_reg_stat_18_constprop_o;
    end else begin
        rf_reg_stat_18_constprop_o = rf_reg_stat_18_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_19_constprop_o = grp_front_end_fu_698_rf_reg_stat_19_constprop_o;
    end else begin
        rf_reg_stat_19_constprop_o = rf_reg_stat_19_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_1_constprop_o = grp_front_end_fu_698_rf_reg_stat_1_constprop_o;
    end else begin
        rf_reg_stat_1_constprop_o = rf_reg_stat_1_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_20_constprop_o = grp_front_end_fu_698_rf_reg_stat_20_constprop_o;
    end else begin
        rf_reg_stat_20_constprop_o = rf_reg_stat_20_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_21_constprop_o = grp_front_end_fu_698_rf_reg_stat_21_constprop_o;
    end else begin
        rf_reg_stat_21_constprop_o = rf_reg_stat_21_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_22_constprop_o = grp_front_end_fu_698_rf_reg_stat_22_constprop_o;
    end else begin
        rf_reg_stat_22_constprop_o = rf_reg_stat_22_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_23_constprop_o = grp_front_end_fu_698_rf_reg_stat_23_constprop_o;
    end else begin
        rf_reg_stat_23_constprop_o = rf_reg_stat_23_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_24_constprop_o = grp_front_end_fu_698_rf_reg_stat_24_constprop_o;
    end else begin
        rf_reg_stat_24_constprop_o = rf_reg_stat_24_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_25_constprop_o = grp_front_end_fu_698_rf_reg_stat_25_constprop_o;
    end else begin
        rf_reg_stat_25_constprop_o = rf_reg_stat_25_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_26_constprop_o = grp_front_end_fu_698_rf_reg_stat_26_constprop_o;
    end else begin
        rf_reg_stat_26_constprop_o = rf_reg_stat_26_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_27_constprop_o = grp_front_end_fu_698_rf_reg_stat_27_constprop_o;
    end else begin
        rf_reg_stat_27_constprop_o = rf_reg_stat_27_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_28_constprop_o = grp_front_end_fu_698_rf_reg_stat_28_constprop_o;
    end else begin
        rf_reg_stat_28_constprop_o = rf_reg_stat_28_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_29_constprop_o = grp_front_end_fu_698_rf_reg_stat_29_constprop_o;
    end else begin
        rf_reg_stat_29_constprop_o = rf_reg_stat_29_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_2_constprop_o = grp_front_end_fu_698_rf_reg_stat_2_constprop_o;
    end else begin
        rf_reg_stat_2_constprop_o = rf_reg_stat_2_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_30_constprop_o = grp_front_end_fu_698_rf_reg_stat_30_constprop_o;
    end else begin
        rf_reg_stat_30_constprop_o = rf_reg_stat_30_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_31_constprop_o = grp_front_end_fu_698_rf_reg_stat_31_constprop_o;
    end else begin
        rf_reg_stat_31_constprop_o = rf_reg_stat_31_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_3_constprop_o = grp_front_end_fu_698_rf_reg_stat_3_constprop_o;
    end else begin
        rf_reg_stat_3_constprop_o = rf_reg_stat_3_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_4_constprop_o = grp_front_end_fu_698_rf_reg_stat_4_constprop_o;
    end else begin
        rf_reg_stat_4_constprop_o = rf_reg_stat_4_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_5_constprop_o = grp_front_end_fu_698_rf_reg_stat_5_constprop_o;
    end else begin
        rf_reg_stat_5_constprop_o = rf_reg_stat_5_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_6_constprop_o = grp_front_end_fu_698_rf_reg_stat_6_constprop_o;
    end else begin
        rf_reg_stat_6_constprop_o = rf_reg_stat_6_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_7_constprop_o = grp_front_end_fu_698_rf_reg_stat_7_constprop_o;
    end else begin
        rf_reg_stat_7_constprop_o = rf_reg_stat_7_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_8_constprop_o = grp_front_end_fu_698_rf_reg_stat_8_constprop_o;
    end else begin
        rf_reg_stat_8_constprop_o = rf_reg_stat_8_constprop_i;
    end
end

always @ (*) begin
    if (((grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rf_reg_stat_9_constprop_o = grp_front_end_fu_698_rf_reg_stat_9_constprop_o;
    end else begin
        rf_reg_stat_9_constprop_o = rf_reg_stat_9_constprop_i;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_front_end_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (icmp_ln124_fu_1156_p2 == 1'd1) & (tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~(((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state4) & ((icmp_ln124_fu_1156_p2 == 1'd0) | (tmp_3_nbreadreq_fu_501_p3 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln136_fu_1182_p2 = (multipliers_counter + 32'd1);

assign add_ln54_fu_1042_p2 = (tmp_r1_fu_1004_p4 + tmp_r2_fu_1014_p4);

assign add_ln68_fu_1064_p2 = (adders_counter + 32'd1);

assign adder_to_front_end_din = {{adders_result_value_0}, {adders_result_src_0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state3 = ((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = (((ap_predicate_op74_write_state4 == 1'b1) & (1'b0 == adder_to_front_end_full_n)) | ((tmp_3_nbreadreq_fu_501_p3 == 1'd1) & (front_end_to_multiplier_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6 = ((ap_predicate_op112_write_state6 == 1'b1) & (multiplier_to_frontend_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_596 = (~((tmp_nbreadreq_fu_480_p3 == 1'd1) & (front_end_to_adder_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3));
end

always @ (*) begin
    ap_condition_606 = (~(input_op_fu_994_p4 == 32'd3) & ~(input_op_fu_994_p4 == 32'd2) & ~(input_op_fu_994_p4 == 32'd1) & (tmp_nbreadreq_fu_480_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_613 = (((input_op_fu_994_p4 == 32'd2) & (tmp_nbreadreq_fu_480_p3 == 1'd1)) | ((input_op_fu_994_p4 == 32'd1) & (tmp_nbreadreq_fu_480_p3 == 1'd1)));
end

assign ap_phi_mux_adders_busy_0_loc_0_phi_fu_545_p8 = adders_busy_0_loc_0_reg_541;

assign ap_phi_mux_multipliers_busy_0_loc_0_phi_fu_633_p6 = multipliers_busy_0_loc_0_reg_629;

always @ (*) begin
    ap_predicate_op112_write_state6 = ((icmp_ln137_fu_1189_p2 == 1'd1) & (multipliers_busy_0_loc_0_reg_629 == 1'd1));
end

always @ (*) begin
    ap_predicate_op74_write_state4 = ((icmp_ln69_fu_1071_p2 == 1'd1) & (1'd1 == adders_busy_0_loc_0_reg_541));
end

assign ap_return_0 = call_ret1_reg_1421_0;

assign ap_return_1 = call_ret1_reg_1421_1;

assign ap_return_10 = call_ret1_reg_1421_10;

assign ap_return_11 = call_ret1_reg_1421_11;

assign ap_return_12 = call_ret1_reg_1421_12;

assign ap_return_13 = call_ret1_reg_1421_13;

assign ap_return_14 = call_ret1_reg_1421_14;

assign ap_return_15 = call_ret1_reg_1421_15;

assign ap_return_16 = call_ret1_reg_1421_16;

assign ap_return_17 = call_ret1_reg_1421_17;

assign ap_return_18 = call_ret1_reg_1421_18;

assign ap_return_19 = call_ret1_reg_1421_19;

assign ap_return_2 = call_ret1_reg_1421_2;

assign ap_return_20 = call_ret1_reg_1421_20;

assign ap_return_21 = call_ret1_reg_1421_21;

assign ap_return_22 = call_ret1_reg_1421_22;

assign ap_return_23 = call_ret1_reg_1421_23;

assign ap_return_24 = call_ret1_reg_1421_24;

assign ap_return_25 = call_ret1_reg_1421_25;

assign ap_return_26 = call_ret1_reg_1421_26;

assign ap_return_27 = call_ret1_reg_1421_27;

assign ap_return_28 = call_ret1_reg_1421_28;

assign ap_return_29 = call_ret1_reg_1421_29;

assign ap_return_3 = call_ret1_reg_1421_3;

assign ap_return_30 = call_ret1_reg_1421_30;

assign ap_return_31 = call_ret1_reg_1421_31;

assign ap_return_32 = call_ret1_reg_1421_32;

assign ap_return_4 = call_ret1_reg_1421_4;

assign ap_return_5 = call_ret1_reg_1421_5;

assign ap_return_6 = call_ret1_reg_1421_6;

assign ap_return_7 = call_ret1_reg_1421_7;

assign ap_return_8 = call_ret1_reg_1421_8;

assign ap_return_9 = call_ret1_reg_1421_9;

assign front_end_to_adder_din = grp_front_end_fu_698_front_end_to_adder_din;

assign front_end_to_multiplier_din = grp_front_end_fu_698_front_end_to_multiplier_din;

assign grp_front_end_fu_698_ap_start = grp_front_end_fu_698_ap_start_reg;

assign icmp_ln124_fu_1156_p2 = ((input_op_1_fu_1120_p4 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1189_p2 = ((add_ln136_fu_1182_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1071_p2 = ((adders_counter == 32'd0) ? 1'b1 : 1'b0);

assign input_op_1_fu_1120_p4 = {{front_end_to_multiplier_dout[95:64]}};

assign input_op_fu_994_p4 = {{front_end_to_adder_dout[95:64]}};

assign multiplier_to_frontend_din = {{multipliers_result_value_0}, {multipliers_result_src_0}};

assign rf_reg_stat_0_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_0_constprop_o_ap_vld;

assign rf_reg_stat_10_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_10_constprop_o_ap_vld;

assign rf_reg_stat_11_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_11_constprop_o_ap_vld;

assign rf_reg_stat_12_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_12_constprop_o_ap_vld;

assign rf_reg_stat_13_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_13_constprop_o_ap_vld;

assign rf_reg_stat_14_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_14_constprop_o_ap_vld;

assign rf_reg_stat_15_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_15_constprop_o_ap_vld;

assign rf_reg_stat_16_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_16_constprop_o_ap_vld;

assign rf_reg_stat_17_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_17_constprop_o_ap_vld;

assign rf_reg_stat_18_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_18_constprop_o_ap_vld;

assign rf_reg_stat_19_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_19_constprop_o_ap_vld;

assign rf_reg_stat_1_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_1_constprop_o_ap_vld;

assign rf_reg_stat_20_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_20_constprop_o_ap_vld;

assign rf_reg_stat_21_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_21_constprop_o_ap_vld;

assign rf_reg_stat_22_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_22_constprop_o_ap_vld;

assign rf_reg_stat_23_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_23_constprop_o_ap_vld;

assign rf_reg_stat_24_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_24_constprop_o_ap_vld;

assign rf_reg_stat_25_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_25_constprop_o_ap_vld;

assign rf_reg_stat_26_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_26_constprop_o_ap_vld;

assign rf_reg_stat_27_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_27_constprop_o_ap_vld;

assign rf_reg_stat_28_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_28_constprop_o_ap_vld;

assign rf_reg_stat_29_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_29_constprop_o_ap_vld;

assign rf_reg_stat_2_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_2_constprop_o_ap_vld;

assign rf_reg_stat_30_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_30_constprop_o_ap_vld;

assign rf_reg_stat_31_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_31_constprop_o_ap_vld;

assign rf_reg_stat_3_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_3_constprop_o_ap_vld;

assign rf_reg_stat_4_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_4_constprop_o_ap_vld;

assign rf_reg_stat_5_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_5_constprop_o_ap_vld;

assign rf_reg_stat_6_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_6_constprop_o_ap_vld;

assign rf_reg_stat_7_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_7_constprop_o_ap_vld;

assign rf_reg_stat_8_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_8_constprop_o_ap_vld;

assign rf_reg_stat_9_constprop_o_ap_vld = grp_front_end_fu_698_rf_reg_stat_9_constprop_o_ap_vld;

assign sub_ln58_fu_1030_p2 = (tmp_r1_fu_1004_p4 - tmp_r2_fu_1014_p4);

assign tmp_3_nbreadreq_fu_501_p3 = front_end_to_multiplier_empty_n;

assign tmp_nbreadreq_fu_480_p3 = front_end_to_adder_empty_n;

assign tmp_r1_fu_1004_p4 = {{front_end_to_adder_dout[127:96]}};

assign tmp_r2_fu_1014_p4 = {{front_end_to_adder_dout[159:128]}};

endmodule //cpu_every_cycle
